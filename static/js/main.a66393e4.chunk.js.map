{"version":3,"sources":["game/utils/pI.ts","game/utils/settings.ts","game/objects/Paddle.ts","game/utils/Vector.ts","game/isTouching.ts","game/utils/setTransition.ts","game/utils/Ease.ts","game/objects/Ball.ts","game/objects/Brick.ts","game/utils/setupBricks.ts","game/main.ts","game/utils/setupAngleTest.ts","game/utils/setupTransitionTest.ts","game/utils/setupSides.ts","game/Game.tsx","components/App/App.tsx","index.tsx"],"names":["pI","p5","settings","transition","squishy","scale","rotation","wobble","bounceColor","angles","Paddle","box","tx","getBounds","wH","width","hH","height","pivot","set","app","color","gr","Graphics","beginFill","drawRect","endFill","this","renderer","generateTexture","x","mov","Math","abs","map","y","ball","position","addChild","Sprite","Vector","z","p","a","b","c","length","p5Vector","isTouching","objA","objB","type","renderable","boxA","boxB","touch","isTouchingBox","getTouchingSidesInfo","sides","vectorA","fromBox","vectorB","angle","sub","heading","mod","leftTop","rightTop","leftTopAng","rightTopAng","leftBottomAng","rightBottomAng","top","right","bottom","left","setTransition","obj","options","initialTime","duration","delay","autoStart","frames","easingFunction","t","ticker","Ticker","initCalled","started","doPosition","every","s","doScale","doRotation","doAlpha","alpha","doNothing","start","copyValuesFrom","Date","now","add","process","init","outerStep","destroy","index","findIndex","time","frameA","frameB","innerStep","res","calc","src","copyFrom","setted","i","filter","n","slice","curr","prev","v","forEach","aIndex","bIndex","timeDiff","indexDiff","timeStep","Array","from","_","modIndex","modTime","calculateStepTimes","setTimeout","Ease","in","inOut","Ball","inStage","vel","logAngles","lastTouchedObj","lastTouchedTime","colorBounce","size","drawCircle","clear","txBounce","setWobble","setSquishy","texture","arc","PI","r","random","rotate","paddle","bounceTextureDuration","bounced","bounce","maxAngMod","maxDiff","rot","console","log","round","degrees","maxAng","minAng","ang","array","squishyBezier","initialScale","wobbleEase","Bezier","Brick","initGame","Application","window","innerWidth","innerHeight","group","Container","bricks","extra","children","brick","removeChild","side","handleMouseMove","event","move","data","global","handleMouseClick","getGlobalPosition","copyTo","stage","release","view","createTexture","interactive","style","TextStyle","fontSize","fill","on","ev","fromAngle","mult","leftBottom","rightBottom","Object","keys","find","k","removeChildren","lineStyle","moveTo","lineTo","Text","setupAngleTest","setInterval","setupTransitionTest","bg","setupSides","groupW","groupH","numX","numY","padding","bricksW","bricksH","easing","floor","random2D","setupBricks","addBall","out","plugins","interaction","cursorStyles","default","setup","Game","divRef","React","gameRef","current","append","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a66393e4.chunk.js","sourcesContent":["import p5 from \"p5\";\r\n\r\nexport const pI = new p5(() => null);","export const settings = {\r\n  brick: {\r\n    transition: true,\r\n  },\r\n  paddle: {\r\n    transition: true,\r\n    squishy: true,\r\n  },\r\n  ball: {\r\n    scale: true,\r\n    rotation: true,\r\n    squishy: true,\r\n    wobble: true,\r\n    bounceColor: true,\r\n  },\r\n  test: {\r\n    transition: false,\r\n    angles: false,\r\n  }\r\n}","import { Application, Graphics, Sprite, Texture } from 'pixi.js';\r\nimport { Ball } from './Ball';\r\nimport { pI } from '../utils/pI';\r\nimport { settings } from '../utils/settings';\r\n\r\nexport class Paddle extends Sprite {\r\n\r\n  static tx: Texture;\r\n\r\n  static createTexture(app: Application, color: number, width: number, height: number) {\r\n    const gr = new Graphics();\r\n    gr.beginFill(color)\r\n      .drawRect(0, 0, width, height)\r\n      .endFill();\r\n    this.tx = app.renderer.generateTexture(gr, 1, 1);\r\n  }\r\n\r\n  constructor() {\r\n    super(Paddle.tx);\r\n    const box = this.getBounds();\r\n    const wH = box.width * .5;\r\n    const hH = box.height * .5;\r\n    this.pivot.set(wH, hH);\r\n  }\r\n\r\n  move(x: number) {\r\n    if(settings.paddle.squishy){\r\n      const mov = Math.abs(this.x - x);\r\n      const max = 60;\r\n      this.scale.x = pI.map(mov, 0, max, 1, 1.6, true);\r\n      this.scale.y = pI.map(mov, 0, max, 1, 0.6, true);\r\n    }\r\n    this.x = x;\r\n  }\r\n\r\n  process() {\r\n    this.scale.set(1, 1);\r\n  }\r\n\r\n  addBall(ball: Ball) {\r\n    ball.position.set(this.getBounds().width * .5, ball.getBounds().height * -.5);\r\n    this.addChild(ball);\r\n  }\r\n}","import { Vector as p5Vector } from \"p5\";\r\nimport { Rectangle, IPoint } from \"pixi.js\";\r\n\r\nexport class Vector extends p5Vector implements IPoint {\r\n\r\n  constructor(x?: number | { x: number, y: number }, y?: number, z?:number) {\r\n    if(typeof x === 'object'){\r\n      y = x.y;\r\n      x = x.x;\r\n    }\r\n    // @ts-ignore\r\n    super(x, y, z);\r\n  }\r\n\r\n  static fromBox(box: Rectangle) {\r\n    return new Vector(box.x + box.width * .5, box.y + box.height * .5);\r\n  }\r\n\r\n  copyFrom(p: IPoint) {\r\n    this.x = p.x;\r\n    this.y = p.y;\r\n    return this;\r\n  }\r\n\r\n  copyTo(p: IPoint) {\r\n    p.x = this.x;\r\n    p.y = this.y;\r\n    return p;\r\n  }\r\n\r\n  equals(a?: any, b?: any, c?: any){\r\n    if(\r\n      a instanceof Vector || // vector instance\r\n      (typeof a === 'number' && typeof b === 'number') ||\r\n      (a.length > 0 && a[0] instanceof Vector) // array?\r\n    ){\r\n      return super.equals(a, b, c);\r\n    }\r\n    if(a){\r\n      return this.x === a.x && this.y === a.y;\r\n    }\r\n    return false;\r\n  }\r\n}","import { DisplayObject, Rectangle } from \"pixi.js\"\r\nimport { Vector } from \"./utils/Vector\";\r\n\r\nexport interface isTouchingReturnType {\r\n  top: boolean;\r\n  right: boolean;\r\n  bottom: boolean;\r\n  left: boolean;\r\n}\r\n\r\nexport const isTouching = (objA: DisplayObject, objB: DisplayObject, type: 0|1 = 0): isTouchingReturnType|false => {\r\n  if(!objA.renderable || !objB.renderable) return false;\r\n  const boxA = objA.getBounds();\r\n  const boxB = objB.getBounds();\r\n  const touch = isTouchingBox(boxA, boxB);\r\n  if(touch){\r\n    const { sides } = getTouchingSidesInfo(boxA, boxB, type);\r\n    return { ...sides };\r\n  }\r\n  return false;\r\n}\r\n\r\nexport const getTouchingSidesInfo = (boxA: Rectangle, boxB: Rectangle, type: 0|1 = 0) => {\r\n  const vectorA = Vector.fromBox(boxA);\r\n  const vectorB = Vector.fromBox(boxB);\r\n  const angle = Vector.sub(vectorB, vectorA).heading();\r\n\r\n  const mod = type === 0 ? new Vector(boxB.width * .5, boxB.height * .5) : new Vector();\r\n\r\n  let leftTop = new Vector(boxA.x - mod.x, boxA.y - mod.y);\r\n  let rightTop = new Vector(boxA.x + boxA.width + mod.x, boxA.y - mod.y);\r\n  \r\n  const leftTopAng = Vector.sub(leftTop, vectorA).heading();\r\n  const rightTopAng = Vector.sub(rightTop, vectorA).heading();\r\n  const leftBottomAng = leftTopAng * -1;\r\n  const rightBottomAng = rightTopAng * -1;\r\n\r\n  const sides = { \r\n    top:    angle >= leftTopAng && angle < rightTopAng,\r\n    right:  angle >= rightTopAng && angle < rightBottomAng,\r\n    bottom: angle >= rightBottomAng && angle < leftBottomAng,\r\n    left:   angle >= leftBottomAng || angle < leftTopAng,\r\n  }\r\n\r\n  return { angle, leftTopAng, rightTopAng, leftBottomAng, rightBottomAng, vectorA, vectorB, sides };\r\n}\r\n\r\nconst isTouchingBox = (boxA: Rectangle, boxB: Rectangle) => {\r\n  const left = boxB.x + boxB.width > boxA.x;\r\n  const right = boxB.x < boxA.x + boxA.width;\r\n  const top = boxB.y + boxB.height > boxA.y;\r\n  const bottom = boxB.y < boxA.y + boxA.height;\r\n  return left && right && top && bottom;\r\n}","import { DisplayObject, Ticker } from \"pixi.js\";\r\nimport { Vector } from \"p5\";\r\nimport { pI } from \"./pI\";\r\n\r\ninterface Transformation {\r\n  time?: number;\r\n  position?: Vector;\r\n  scale?: Vector;\r\n  rotation?: number;\r\n  alpha?: number;\r\n}\r\n\r\ninterface Options {\r\n  frames: Transformation[];\r\n  duration: number;\r\n  delay?: number;\r\n  autoStart?: boolean;\r\n  easingFunction?: (t: number) => number;\r\n}\r\n\r\nexport const setTransition = (obj: DisplayObject, options: Options) => {\r\n\r\n  const { duration, delay, autoStart = true, frames } = options;\r\n  const easingFunction = options.easingFunction || ((t) => t);\r\n\r\n  const ticker = new Ticker();\r\n  let initialTime: number;\r\n  \r\n  // flags\r\n  let initCalled = false;\r\n  let started = false;\r\n  const doPosition = frames.every(s => s.position);\r\n  const doScale    = frames.every(s => s.scale);\r\n  const doRotation = frames.every(s => typeof s.rotation === 'number');\r\n  const doAlpha    = frames.every(s => typeof s.alpha === 'number');\r\n  const doNothing  = (!doPosition && !doScale && !doRotation && !doAlpha) || frames.length < 2;\r\n\r\n  // initial processing\r\n  const initialProcessing = () => {\r\n    // calculate time for steps\r\n    if(!doNothing) calculateStepTimes();\r\n\r\n    // start if has delay or autoStart\r\n    if((delay && delay > 0 && autoStart === true) || autoStart) {\r\n      init();\r\n      setTimeout(() => start(), delay || 0);\r\n    }\r\n  }\r\n\r\n  // start transition\r\n  const start = () => {\r\n    if(doNothing || started) return;\r\n    if(!initCalled) copyValuesFrom(frames[0]);\r\n    initialTime = Date.now();\r\n    ticker.add(process);\r\n    ticker.start();\r\n    started = true;\r\n  }\r\n\r\n  // set initial values\r\n  const init = () => {\r\n    if(doNothing) return;\r\n    copyValuesFrom(frames[0]);\r\n    initCalled = true;\r\n  }\r\n\r\n  // ticker process\r\n  const process = () => {\r\n    // calculate main step (beginning to end of transition)\r\n    const now = Date.now();\r\n    const diff = now - initialTime;\r\n    const outerStep = diff / duration;\r\n\r\n    // set end position\r\n    if(outerStep >= 1){\r\n      copyValuesFrom(frames[frames.length - 1]);\r\n      ticker.destroy();\r\n      return;\r\n    }\r\n\r\n    // get next frame index\r\n    const index = frames.findIndex(({ time }) => (outerStep < time!));\r\n    // get frames for current transition\r\n    const frameA = frames[index - 1];\r\n    const frameB = frames[index];\r\n    // calculate inner step (number between 0 and 1, inside the frames time range)\r\n    const innerStep = pI.map(outerStep, frameA.time!, frameB.time!, 0, 1, true);\r\n    // calculate modifier (y position for x = innerStep)\r\n    const res = easingFunction(innerStep);\r\n    // apply to relevant parameter\r\n    if(doPosition){\r\n      obj.position.x = calc(res, frameA.position!.x, frameB.position!.x);\r\n      obj.position.y = calc(res, frameA.position!.y, frameB.position!.y);\r\n    }\r\n    if(doScale){\r\n      obj.scale.x = calc(res, frameA.scale!.x, frameB.scale!.x);\r\n      obj.scale.y = calc(res, frameA.scale!.y, frameB.scale!.y);\r\n    }\r\n    if(doRotation) obj.rotation = calc(res, frameA.rotation!, frameB.rotation!);\r\n    if(doAlpha) obj.alpha = calc(res, frameA.alpha!, frameB.alpha!);\r\n  }\r\n\r\n  // map src to range\r\n  const calc = (src: number, a: number, b: number) => a + (b - a) * src;\r\n  \r\n  const copyValuesFrom = (src: Transformation) => {\r\n    if(doPosition) obj.position.copyFrom(src.position as any);\r\n    if(doScale)    obj.scale.copyFrom(src.scale as any);\r\n    if(doRotation) obj.rotation = src.rotation!;\r\n    if(doAlpha)    obj.alpha = src.alpha!;\r\n  }\r\n\r\n  const calculateStepTimes = () => {\r\n    // set first and last frames with 0 and 1\r\n    frames[0].time = 0;\r\n    frames[frames.length - 1].time = 1;\r\n\r\n    // only makes sense if there's more than 2\r\n    if(frames.length === 2) return;\r\n\r\n    // get frames with time set\r\n    const setted = frames // map to index or -1\r\n      .map(({ time: t }, i) => (typeof t === 'number' && (t >= 0 || t <= 1) ? i : -1))\r\n      .filter(n => n >= 0); // remove -1\r\n\r\n    setted.slice(1) // remove first (0)\r\n      .map((curr, i) => {\r\n        const prev = setted[i];\r\n        // only return group if is not consecutive\r\n        if(prev + 1 < curr) return [prev,curr];\r\n      })\r\n      .filter(v => v) // remove emtpy values\r\n      .forEach(([aIndex, bIndex]: any) => {\r\n        //console.log(aIndex, bIndex);\r\n        const frameA = frames[aIndex];\r\n        let frameB = frames[bIndex];\r\n        // to prevent range errors\r\n        if(frameA.time! > frameB.time!) frameB = frameA;\r\n        // dime difference in range\r\n        const timeDiff = frameB.time! - frameA.time!;\r\n        // diff between indexes (spaces between)\r\n        const indexDiff = bIndex - aIndex;\r\n        // time division\r\n        const timeStep = timeDiff / indexDiff;\r\n        // loop spaces to fill (indexDiff - 1)\r\n        Array.from({ length: indexDiff - 1 })\r\n          .forEach((_, i) => {\r\n            // empty index\r\n            const modIndex = aIndex + i + 1;\r\n            // beginning + step\r\n            const modTime = frameA.time! + timeStep * (i + 1);\r\n            frames[modIndex].time = modTime;\r\n          });\r\n      });\r\n  }\r\n\r\n  //\r\n  initialProcessing();\r\n\r\n  return { init, start };\r\n\r\n}","// https://gist.github.com/yukulele/2234731c0445dd5b1f4673889bf3330c\r\n\r\nexport class Ease {\r\n  static in(p = 1) {\r\n    return (t: number) => t ** p;\r\n  }\r\n  static out(p = 1) {\r\n    return (t: number) => 1 - Ease.in(p)(1 - t);\r\n  }\r\n  static inOut(p = 1) {\r\n    return (t: number): number => {\r\n      if (t <= 0.5) {\r\n        return Ease.in(p)(t * 2) / 2\r\n      }\r\n      return 1 - Ease.inOut(p)(1 - t);\r\n    }\r\n  }\r\n}","import { Sprite, Graphics, Application, Texture, DisplayObject } from \"pixi.js\";\r\nimport { isTouchingReturnType, isTouching } from \"../isTouching\";\r\nimport { Paddle } from \"./Paddle\";\r\nimport { Vector } from \"../utils/Vector\";\r\nimport { pI } from \"../utils/pI\";\r\nimport { setTransition } from \"../utils/setTransition\";\r\nimport Bezier from 'bezier-easing';\r\nimport { settings } from \"../utils/settings\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\nexport class Ball extends Sprite {\r\n\r\n  static tx: Texture;\r\n  static txBounce: Texture;\r\n  static squishyBezier = Bezier(0,1.54,.37,.74);\r\n  static wobbleEase = Ease.inOut(1.5);\r\n  static bounceTextureDuration = 100;\r\n\r\n  inStage: boolean;\r\n  vel: Vector;\r\n\r\n  logAngles = false;\r\n\r\n  lastTouchedObj: DisplayObject|null = null;\r\n  lastTouchedTime: number = 0;\r\n\r\n  static createTexture(app: Application, color: number, colorBounce: number, size: number) {\r\n    const gr = new Graphics();\r\n    gr.beginFill(color)\r\n      .drawCircle(0, 0, size)\r\n      .endFill();\r\n    // regular\r\n    this.tx = app.renderer.generateTexture(gr, 1, 1);\r\n    gr.clear()\r\n      .beginFill(colorBounce)\r\n      .drawCircle(0, 0, size)\r\n      .endFill();\r\n    // bounce\r\n    this.txBounce = app.renderer.generateTexture(gr, 1, 1);\r\n  }\r\n\r\n  constructor() {\r\n    super(Ball.tx);\r\n    const box = this.getBounds();\r\n    const wH = box.width * .5;\r\n    const hH = box.height * .5;\r\n    this.pivot.set(wH, hH);\r\n    this.inStage = false;\r\n    this.vel = new Vector();\r\n  }\r\n\r\n  bounce(touch: isTouchingReturnType, obj: DisplayObject|null = null) {\r\n    if(!this.inStage) return false;\r\n    if(obj && this.lastTouchedObj === obj) return false;\r\n    this.lastTouchedObj = obj;\r\n    const { top, right, bottom, left } = touch;\r\n    if(top || bottom) this.vel.y *= -1;\r\n    else if(left || right) this.vel.x *= -1;\r\n    // wobble (plus squishy if enabled)\r\n    if(settings.ball.wobble) this.setWobble(settings.ball.squishy);\r\n    // only squishy\r\n    else if(settings.ball.squishy) this.setSquishy();\r\n    if(settings.ball.bounceColor) {\r\n      this.lastTouchedTime = Date.now();\r\n      this.texture = Ball.txBounce;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  release() {\r\n    this.inStage = true;\r\n    this.vel = new Vector(0, -10);\r\n    const arc = Math.PI * .3;\r\n    const r = Math.random() * arc - arc * .5;\r\n    this.vel.rotate(r);\r\n  }\r\n\r\n  process(paddle: Paddle) {\r\n    if(!this.inStage) return;\r\n\r\n    if(this.texture === Ball.txBounce){\r\n      const diff = Date.now() - this.lastTouchedTime;\r\n      if(diff > Ball.bounceTextureDuration) this.texture = Ball.tx;\r\n    }\r\n\r\n    if(settings.ball.scale) this.scale.set(1.5, 1);\r\n    if(settings.ball.rotation) this.rotation = this.vel.heading();\r\n\r\n    const touch = isTouching(paddle, this, 1);\r\n    let bounced = false;\r\n\r\n    if(touch) bounced = this.bounce(touch, paddle);\r\n\r\n    if(touch && touch.top && bounced){\r\n      const maxAngMod = Math.PI * .1;\r\n      const maxDiff = paddle.getBounds().width * .5 + this.getBounds().width * .5;\r\n      const diff = this.position.x - paddle.position.x;\r\n      const diffNormal = diff / maxDiff;\r\n      const rot = maxAngMod * diffNormal;\r\n\r\n      if(this.logAngles) console.log('\\n\\nincoming: ', Math.round(pI.degrees(this.vel.heading())));\r\n      if(this.logAngles) console.log('inverted: ', Math.round(pI.degrees(this.vel.heading())));\r\n      this.vel.rotate(rot);\r\n      if(this.logAngles) console.log('rotated: ', Math.round(rot * 180/Math.PI), Math.round(pI.degrees(this.vel.heading())));\r\n\r\n      const maxAngMult = -.18;\r\n      const maxAng = Math.PI * maxAngMult;\r\n      const minAng = Math.PI * -(1 + maxAngMult);\r\n      const ang = this.vel.heading();\r\n      if(ang > maxAng) this.vel.rotate((ang - maxAng) * -1);\r\n      if(ang < minAng) this.vel.rotate((ang - minAng) * -1);\r\n\r\n      if(this.logAngles) console.log('final: ', Math.round(pI.degrees(this.vel.heading())), Math.round(minAng * 180/Math.PI), Math.round(maxAng * 180/Math.PI));\r\n    }\r\n    \r\n    this.position.set(...new Vector(this.position).add(this.vel).array());\r\n  }\r\n\r\n  setSquishy() {\r\n    setTransition(this, {\r\n      frames: [\r\n        { scale: new Vector(1.5, 1.5) },\r\n        { scale: new Vector(this.scale) },\r\n      ],\r\n      duration: 50,\r\n      autoStart: true,\r\n      easingFunction: Ball.squishyBezier,\r\n    });\r\n  }\r\n\r\n  setWobble(squishy: boolean) {\r\n    const initialScale = new Vector(this.scale);\r\n    setTransition(this, {\r\n      frames: [\r\n        { scale: squishy ? new Vector(1.5, 1.5) : initialScale },\r\n        { scale: new Vector(1.4, .7) },\r\n        { scale: new Vector(1, 1.3) },\r\n        { scale: new Vector(1.2, .8) },\r\n        { scale: initialScale },\r\n      ],\r\n      duration: 800,\r\n      autoStart: true,\r\n      easingFunction: Ball.wobbleEase,\r\n    });\r\n  }\r\n}","import { Sprite, Texture, Graphics, Application } from \"pixi.js\";\r\n\r\nexport class Brick extends Sprite {\r\n\r\n  static tx: Texture;\r\n\r\n  static createTexture(app: Application, color: number, width: number, height: number) {\r\n    const gr = new Graphics();\r\n    gr.beginFill(color)\r\n      .drawRect(0, 0, width, height)\r\n      .endFill();\r\n    this.tx = app.renderer.generateTexture(gr, 1, 1);\r\n  }\r\n\r\n  constructor(x: number, y: number) {\r\n    super(Brick.tx);\r\n    const box = this.getBounds();\r\n    const wH = box.width * .5;\r\n    const hH = box.height * .5;\r\n    this.pivot.set(wH, hH);\r\n    this.position.set(x + wH, y + hH);\r\n  }\r\n  \r\n}","import { Application, Container } from \"pixi.js\";\r\nimport { Brick } from \"../objects/Brick\";\r\nimport { setTransition } from \"./setTransition\";\r\nimport { Vector } from \"./Vector\";\r\nimport Bezier from 'bezier-easing';\r\nimport { settings } from \"./settings\";\r\n\r\nexport const setupBricks = (app: Application, bricks: Container, color: number, groupW: number, groupH: number, numX: number, numY: number, padding: number) => {\r\n  const bricksW = (groupW - padding * (numX - 1)) / numX;\r\n  const bricksH = (groupH - padding * (numY - 1)) / numY;\r\n\r\n  const easing = Bezier(.48,1.52,.34,.87);\r\n\r\n  Brick.createTexture(app, color, bricksW, bricksH);\r\n  Array\r\n    .from({ length: numX * numY })\r\n    .forEach((_, index: number) => {\r\n      const y = Math.floor(index / numX);\r\n      const x = index - y * numX;\r\n      const brick = new Brick(x * (bricksW + padding), y * (bricksH + padding));\r\n      bricks.addChild(brick);\r\n      if(!settings.brick.transition) return;\r\n      setTransition(brick, {\r\n        frames: [\r\n          {\r\n            position: new Vector(brick.position).add(Vector.random2D().mult(100)),\r\n            scale: new Vector(0.4, 0.4),\r\n            alpha: 0,\r\n            rotation: Math.random() * Math.PI * .2 - Math.PI * .1,\r\n          },\r\n          {\r\n            position: new Vector(brick.position),\r\n            scale: new Vector(1, 1),\r\n            alpha: 1,\r\n            rotation: 0,\r\n          },\r\n        ],\r\n        duration: 600 + Math.random() * 200,\r\n        delay: Math.random() * 700,\r\n        easingFunction: easing,\r\n      });\r\n    });\r\n\r\n  return bricks;\r\n}","import { Ticker, Application, Container, interaction, Graphics } from 'pixi.js';\r\nimport { Paddle } from './objects/Paddle';\r\nimport { Ball } from './objects/Ball';\r\nimport { setupBricks } from './utils/setupBricks';\r\nimport { isTouching } from './isTouching';\r\nimport { setupSides } from './utils/setupSides';\r\nimport { setTransition } from './utils/setTransition';\r\nimport { Vector } from './utils/Vector';\r\nimport { Ease } from './utils/Ease';\r\nimport { settings } from './utils/settings';\r\nimport { setupAngleTest } from './utils/setupAngleTest';\r\nimport { setupTransitionTest } from './utils/setupTransitionTest';\r\n\r\nexport const initGame = () => {\r\n  \r\n  const app = new Application({ \r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n\r\n  const ticker = new Ticker();\r\n\r\n  const group = new Container();\r\n  var paddle: Paddle;\r\n  var bricks = new Container();\r\n  var ball: Ball;\r\n  var sides = new Container();\r\n\r\n  // for debugging\r\n  var extra = new Container();\r\n\r\n  const setup = () => {\r\n    const { width, height } = app.view;\r\n    \r\n    // background\r\n    const bg = new Graphics()\r\n      .beginFill(0x000000)\r\n      .drawRect(0, 0, width, height)\r\n      .endFill();\r\n    app.stage.addChild(bg);\r\n\r\n    //sides\r\n    setupSides(app, sides, 100, 0x11cccc);\r\n    app.stage.addChild(sides);\r\n\r\n    // setup bricks\r\n    bricks = setupBricks(app, bricks, 0xcc11cc, width * .8, height * .35, 8, 6, 20);\r\n    bricks.position.set(width * .1, width * .1);\r\n    group.addChild(bricks);\r\n\r\n    // setup ball\r\n    Ball.createTexture(app, 0xccf111, 0xffffff, 20);\r\n    ball = new Ball();\r\n    \r\n    // setup paddle\r\n    Paddle.createTexture(app, 0xcc1111, width * .15, 40);\r\n    paddle = new Paddle();\r\n    paddle.position.set(width * .5, height - 60);\r\n    paddle.addBall(ball);\r\n    group.addChild(paddle);\r\n    if(settings.paddle.transition){\r\n      setTransition(paddle, {\r\n        frames: [\r\n          {\r\n            position: new Vector(paddle.position).add(0, 300),\r\n            scale: new Vector(.3, .3),\r\n          },\r\n          {\r\n            position: new Vector(paddle.position),\r\n            scale: new Vector(1, 1),\r\n          },\r\n        ],\r\n        duration: 500,\r\n        delay: 400,\r\n        easingFunction: Ease.out(3),\r\n      });\r\n    }\r\n\r\n    // add group to stage\r\n    app.stage.addChild(group);\r\n\r\n    // add extra to stage\r\n    app.stage.addChild(extra);\r\n\r\n    app.stage.interactive = true;\r\n    app.stage.on('mousemove', handleMouseMove);\r\n    app.stage.on('mousedown', handleMouseClick);\r\n    app.renderer.plugins.interaction.cursorStyles.default = 'none';\r\n\r\n    ticker.add(process);\r\n    ticker.start();\r\n  }\r\n\r\n  const process = () => {\r\n    ball.process(paddle);\r\n    paddle.process();\r\n\r\n    bricks.children.forEach(brick => {\r\n      const touch = isTouching(brick, ball);\r\n      if(touch){\r\n        ball.bounce(touch);\r\n        bricks.removeChild(brick);\r\n      }\r\n    });\r\n\r\n    /*const p = new Graphics()\r\n          .beginFill(0xffffff)\r\n          .drawCircle(ball.position.x, ball.position.y, 5)\r\n          .endFill();\r\n        extra.addChild(p);*/\r\n\r\n    sides.children.forEach(side => {\r\n      const touch = isTouching(side, ball, 1);\r\n      if(touch) ball.bounce(touch, side);\r\n    });\r\n  }\r\n\r\n  const handleMouseMove = (event: interaction.InteractionEvent) => {\r\n    paddle.move(event.data.global.x);\r\n  }\r\n\r\n  const handleMouseClick = (event: interaction.InteractionEvent) => {\r\n    if(ball.inStage) return;\r\n    ball.getGlobalPosition().copyTo(ball.position);\r\n    app.stage.addChild(ball);\r\n    ball.release();\r\n  }\r\n\r\n  if(settings.test.angles){\r\n    setupAngleTest(app);\r\n  } else if(settings.test.transition){\r\n    setupTransitionTest(app);\r\n  } else {\r\n    setup();\r\n  }\r\n\r\n  return app;\r\n}","import { Brick } from \"../objects/Brick\";\r\nimport { Application, Graphics, TextStyle, Text, interaction } from \"pixi.js\";\r\nimport { Ball } from \"../objects/Ball\";\r\nimport { Vector } from \"./Vector\";\r\nimport { pI } from \"./pI\";\r\nimport { getTouchingSidesInfo } from \"../isTouching\";\r\n\r\nexport const setupAngleTest = (app: Application) => {\r\n  const { width, height } = app.view;\r\n  \r\n  Brick.createTexture(app, 0xcc11cc, 200, 20);\r\n  const objA = new Brick(width * .5, height * .5);\r\n  app.stage.addChild(objA);\r\n\r\n  Ball.createTexture(app, 0xccf111, 0xccf111, 20);\r\n  const objB = new Ball();\r\n  app.stage.addChild(objB);\r\n\r\n  app.stage.interactive = true;\r\n  const gr = new Graphics();\r\n  const style = new TextStyle({\r\n    fontSize: 14,\r\n    fill: '#ffffff',\r\n  });\r\n  app.stage.addChild(gr);\r\n  \r\n  app.stage.on('mousemove', (ev: interaction.InteractionEvent) => {\r\n    objB.position.copyFrom(ev.data.global);\r\n\r\n    const boxA = objA.getBounds();\r\n    const boxB = objB.getBounds();\r\n\r\n    const { angle, leftTopAng, rightTopAng, leftBottomAng, rightBottomAng, vectorA, sides } = getTouchingSidesInfo(boxA, boxB, 1);\r\n\r\n    const size = 200;\r\n    const leftTop = Vector.fromAngle(leftTopAng).mult(size).add(vectorA);\r\n    const rightTop = Vector.fromAngle(rightTopAng).mult(size).add(vectorA);\r\n    const leftBottom = Vector.fromAngle(leftBottomAng).mult(size).add(vectorA);\r\n    const rightBottom = Vector.fromAngle(rightBottomAng).mult(size).add(vectorA);\r\n\r\n    // @ts-ignore\r\n    let side = Object.keys(sides).find(k => sides[k]);\r\n\r\n    gr.removeChildren();\r\n    gr.clear()\r\n      .lineStyle(2, 0xffffff)\r\n      .moveTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y)\r\n      .lineTo(objB.x, objB.y)\r\n      .moveTo(leftTop.x, leftTop.y)\r\n      .lineTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y)\r\n      .moveTo(rightTop.x, rightTop.y)\r\n      .lineTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y)\r\n      .moveTo(leftBottom.x, leftBottom.y)\r\n      .lineTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y)\r\n      .moveTo(rightBottom.x, rightBottom.y)\r\n      .lineTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y);\r\n\r\n    const tx = new Text(Math.round(pI.degrees(angle)) + ' ' + side, style);\r\n    tx.position.x = objB.position.x + 15;\r\n    tx.position.y = objB.position.y + 15;\r\n    gr.addChild(tx);\r\n\r\n\r\n  });\r\n}","import { Application } from \"pixi.js\";\r\nimport { Ball } from \"../objects/Ball\";\r\nimport { setTransition } from \"./setTransition\";\r\nimport { Vector } from \"./Vector\";\r\nimport { Ease } from \"./Ease\";\r\n\r\nexport const setupTransitionTest = (app: Application) => {\r\n  const { width, height } = app.view;\r\n\r\n  Ball.createTexture(app, 0xccf111, 0xccf111, 20);\r\n  const ball = new Ball();\r\n  ball.position.set(width * .5, height * .5);\r\n  app.stage.addChild(ball);\r\n\r\n  const duration = 800;\r\n  const initialScale = new Vector(1, 1.5);\r\n  const transition = () => {\r\n    console.clear();\r\n    setTransition(ball, {\r\n      frames: [\r\n        {\r\n          scale: initialScale,\r\n        },\r\n        {\r\n          scale: new Vector(1.4, .7),\r\n        },\r\n        {\r\n          scale: new Vector(1, 1.3),\r\n        },\r\n        {\r\n          scale: new Vector(1.2, .8),\r\n        },\r\n        {\r\n          scale: new Vector(1, 1),\r\n        },\r\n      ],\r\n      duration: duration,\r\n      autoStart: true,\r\n      easingFunction: Ease.inOut(1.5),\r\n    });\r\n  };\r\n  transition();\r\n  setInterval(transition, duration + 500);\r\n}","import { Container, Graphics, Application } from \"pixi.js\";\r\n\r\nexport const setupSides = (app: Application, sides: Container, size: number, color: number) => {\r\n  const { width, height } = app.view;\r\n  var top = new Graphics()\r\n    .beginFill(color)\r\n    .drawRect(-size, -size, width + size, size)\r\n    .endFill();\r\n  var right = new Graphics()\r\n    .beginFill(color)\r\n    .drawRect(width, -size, size, height + size)\r\n    .endFill();\r\n  var bottom = new Graphics()\r\n    .beginFill(color)\r\n    .drawRect(-size, height, width + size, size)\r\n    .endFill();\r\n  var left = new Graphics()\r\n    .beginFill(color)\r\n    .drawRect(-size, -size, size, height + size)\r\n    .endFill();\r\n  sides.addChild(top);\r\n  sides.addChild(right);\r\n  sides.addChild(bottom);\r\n  sides.addChild(left);\r\n}","import * as React from 'react';\r\nimport { initGame } from './main';\r\nimport { Application } from 'pixi.js';\r\n\r\ninterface GameProps {}\r\n\r\nconst Game: React.FC<GameProps> = () => {\r\n\r\n  const divRef = React.useRef(null as null|HTMLDivElement);\r\n  const gameRef = React.useRef(null as null|Application);\r\n\r\n  React.useEffect(() => {\r\n    gameRef.current = initGame();\r\n    divRef.current!.append(gameRef.current.view);\r\n  }, []);\r\n  \r\n  return (<div ref={divRef}></div>);\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport Game from '../../game/Game';\n\nconst App = () => {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}