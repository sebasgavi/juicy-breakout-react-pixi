{"version":3,"sources":["game/objects/Paddle.ts","game/utils/Vector.ts","game/isTouching.ts","game/utils/pI.ts","game/objects/Ball.ts","game/objects/Brick.ts","game/utils/setTransition.ts","game/utils/Ease.ts","game/main.ts","game/utils/setupSides.ts","game/utils/setupBricks.ts","game/Game.tsx","components/App/App.tsx","index.tsx"],"names":["Paddle","tx","justTouched","box","getBounds","wH","width","hH","height","pivot","set","app","color","gr","Graphics","beginFill","drawRect","endFill","this","renderer","generateTexture","x","ball","position","addChild","Sprite","Vector","y","z","p","a","b","c","length","p5Vector","isTouching","objA","objB","type","renderable","boxA","boxB","touch","isTouchingBox","getTouchingSidesInfo","sides","vectorA","fromBox","vectorB","angle","sub","heading","mod","leftTop","rightTop","leftTopAng","rightTopAng","leftBottomAng","rightBottomAng","top","right","bottom","left","pI","p5","Ball","inStage","vel","logAngles","size","drawCircle","arc","Math","PI","r","random","rotate","paddle","alreadyTouched","find","push","bounce","maxAngMod","maxDiff","rot","console","log","round","degrees","maxAng","minAng","ang","dist","filter","add","array","Brick","setTransition","obj","options","initialTime","enter","exit","duration","delay","autoStart","easingFunction","ticker","Ticker","initCalled","started","doPosition","doScale","scale","doRotation","rotation","doAlpha","alpha","doNothing","start","copyValuesFrom","Date","now","process","init","step","destroy","res","calc","src","copyFrom","setTimeout","Ease","t","in","inOut","initGame","Application","window","innerWidth","innerHeight","group","Container","bricks","extra","children","forEach","brick","removeChild","side","handleMouseMove","event","move","data","global","handleMouseClick","getGlobalPosition","copyTo","stage","release","view","bg","sideSize","sideColor","setupSides","groupW","groupH","numX","numY","padding","bricksW","bricksH","easing","Bezier","createTexture","Array","from","_","index","floor","random2D","mult","setupBricks","addBall","out","interactive","on","plugins","interaction","cursorStyles","default","setup","Game","divRef","React","gameRef","current","append","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15cccfc0.chunk.js","sourcesContent":["import { Application, Graphics, Sprite, Texture } from 'pixi.js';\r\nimport { Ball } from './Ball';\r\n\r\nexport class Paddle extends Sprite {\r\n\r\n  static tx: Texture;\r\n  justTouched: Ball[];\r\n\r\n  static createTexture(app: Application, color: number, width: number, height: number) {\r\n    const gr = new Graphics();\r\n    gr.beginFill(color)\r\n      .drawRect(0, 0, width, height)\r\n      .endFill();\r\n    this.tx = app.renderer.generateTexture(gr, 1, 1);\r\n  }\r\n\r\n  constructor() {\r\n    super(Paddle.tx);\r\n    const box = this.getBounds();\r\n    const wH = box.width * .5;\r\n    const hH = box.height * .5;\r\n    this.pivot.set(wH, hH);\r\n    this.justTouched = [];\r\n  }\r\n\r\n  move(x: number) {\r\n    this.x = x;\r\n  }\r\n\r\n  addBall(ball: Ball) {\r\n    ball.position.set(this.getBounds().width * .5, ball.getBounds().height * -.5);\r\n    this.addChild(ball);\r\n  }\r\n}","import { Vector as p5Vector } from \"p5\";\r\nimport { Rectangle, IPoint } from \"pixi.js\";\r\n\r\nexport class Vector extends p5Vector implements IPoint {\r\n\r\n  constructor(x?: number | { x: number, y: number }, y?: number, z?:number) {\r\n    if(typeof x === 'object'){\r\n      y = x.y;\r\n      x = x.x;\r\n    }\r\n    // @ts-ignore\r\n    super(x, y, z);\r\n  }\r\n\r\n  static fromBox(box: Rectangle) {\r\n    return new Vector(box.x + box.width * .5, box.y + box.height * .5);\r\n  }\r\n\r\n  copyFrom(p: IPoint) {\r\n    this.x = p.x;\r\n    this.y = p.y;\r\n    return this;\r\n  }\r\n\r\n  copyTo(p: IPoint) {\r\n    p.x = this.x;\r\n    p.y = this.y;\r\n    return p;\r\n  }\r\n\r\n  equals(a?: any, b?: any, c?: any){\r\n    if(\r\n      a instanceof Vector || // vector instance\r\n      (typeof a === 'number' && typeof b === 'number') ||\r\n      (a.length > 0 && a[0] instanceof Vector) // array?\r\n    ){\r\n      return super.equals(a, b, c);\r\n    }\r\n    if(a){\r\n      return this.x === a.x && this.y === a.y;\r\n    }\r\n    return false;\r\n  }\r\n}","import { DisplayObject, Rectangle } from \"pixi.js\"\r\nimport { Vector } from \"./utils/Vector\";\r\n\r\nexport interface isTouchingReturnType {\r\n  top: boolean;\r\n  right: boolean;\r\n  bottom: boolean;\r\n  left: boolean;\r\n}\r\n\r\nexport const isTouching = (objA: DisplayObject, objB: DisplayObject, type: 0|1 = 0): isTouchingReturnType|false => {\r\n  if(!objA.renderable || !objB.renderable) return false;\r\n  const boxA = objA.getBounds();\r\n  const boxB = objB.getBounds();\r\n  const touch = isTouchingBox(boxA, boxB);\r\n  if(touch){\r\n    const { sides } = getTouchingSidesInfo(boxA, boxB, type);\r\n    return { ...sides };\r\n  }\r\n  return false;\r\n}\r\n\r\nexport const getTouchingSidesInfo = (boxA: Rectangle, boxB: Rectangle, type: 0|1 = 0) => {\r\n  const vectorA = Vector.fromBox(boxA);\r\n  const vectorB = Vector.fromBox(boxB);\r\n  const angle = Vector.sub(vectorB, vectorA).heading();\r\n\r\n  const mod = type === 0 ? new Vector(boxB.width * .5, boxB.height * .5) : new Vector();\r\n\r\n  let leftTop = new Vector(boxA.x - mod.x, boxA.y - mod.y);\r\n  let rightTop = new Vector(boxA.x + boxA.width + mod.x, boxA.y - mod.y);\r\n  \r\n  const leftTopAng = Vector.sub(leftTop, vectorA).heading();\r\n  const rightTopAng = Vector.sub(rightTop, vectorA).heading();\r\n  const leftBottomAng = leftTopAng * -1;\r\n  const rightBottomAng = rightTopAng * -1;\r\n\r\n  const sides = { \r\n    top:    angle >= leftTopAng && angle < rightTopAng,\r\n    right:  angle >= rightTopAng && angle < rightBottomAng,\r\n    bottom: angle >= rightBottomAng && angle < leftBottomAng,\r\n    left:   angle >= leftBottomAng || angle < leftTopAng,\r\n  }\r\n\r\n  return { angle, leftTopAng, rightTopAng, leftBottomAng, rightBottomAng, vectorA, vectorB, sides };\r\n}\r\n\r\nconst isTouchingBox = (boxA: Rectangle, boxB: Rectangle) => {\r\n  const left = boxB.x + boxB.width > boxA.x;\r\n  const right = boxB.x < boxA.x + boxA.width;\r\n  const top = boxB.y + boxB.height > boxA.y;\r\n  const bottom = boxB.y < boxA.y + boxA.height;\r\n  return left && right && top && bottom;\r\n}","import p5 from \"p5\";\r\n\r\nexport const pI = new p5(() => null);","import { Sprite, Graphics, Application, Texture } from \"pixi.js\";\r\nimport { isTouchingReturnType, isTouching } from \"../isTouching\";\r\nimport { Paddle } from \"./Paddle\";\r\nimport { Vector } from \"../utils/Vector\";\r\nimport { pI } from \"../utils/pI\";\r\n\r\nexport class Ball extends Sprite {\r\n\r\n  static tx: Texture;\r\n\r\n  inStage: boolean;\r\n  vel: Vector;\r\n\r\n  logAngles = false;\r\n\r\n  static createTexture(app: Application, color: number, size: number) {\r\n    const gr = new Graphics();\r\n    gr.beginFill(color)\r\n      .drawCircle(0, 0, size)\r\n      .endFill();\r\n    this.tx = app.renderer.generateTexture(gr, 1, 1);\r\n  }\r\n\r\n  constructor() {\r\n    super(Ball.tx);\r\n    const box = this.getBounds();\r\n    const wH = box.width * .5;\r\n    const hH = box.height * .5;\r\n    this.pivot.set(wH, hH);\r\n    this.inStage = false;\r\n    this.vel = new Vector();\r\n  }\r\n\r\n  bounce(touch: isTouchingReturnType) {\r\n    const { top, right, bottom, left } = touch;\r\n    if(top || bottom) this.vel.y *= -1;\r\n    if(left || right) this.vel.x *= -1;\r\n  }\r\n\r\n  release() {\r\n    this.inStage = true;\r\n    this.vel = new Vector(0, -10);\r\n    const arc = Math.PI * .3;\r\n    const r = Math.random() * arc - arc * .5;\r\n    this.vel.rotate(r);\r\n  }\r\n\r\n  process(paddle: Paddle) {\r\n    if(!this.inStage) return;\r\n\r\n    const touch = isTouching(paddle, this, 1);\r\n    const alreadyTouched = paddle.justTouched.find(b => b === this);\r\n\r\n    if(touch && !touch.top && !alreadyTouched) {\r\n      // if touch add to touched array\r\n      paddle.justTouched.push(this);\r\n      this.bounce(touch);\r\n    }\r\n\r\n    if(touch && touch.top && !alreadyTouched){\r\n      // if touch add to touched array\r\n      paddle.justTouched.push(this);\r\n      \r\n      const maxAngMod = Math.PI * .1;\r\n      const maxDiff = paddle.getBounds().width * .5 + this.getBounds().width * .5;\r\n      const diff = this.position.x - paddle.position.x;\r\n      const diffNormal = diff / maxDiff;\r\n      const rot = maxAngMod * diffNormal;\r\n\r\n      if(this.logAngles) console.log('\\n\\nincoming: ', Math.round(pI.degrees(this.vel.heading())));\r\n      this.vel.y *= -1;\r\n      if(this.logAngles) console.log('inverted: ', Math.round(pI.degrees(this.vel.heading())));\r\n      this.vel.rotate(rot);\r\n      if(this.logAngles) console.log('rotated: ', Math.round(rot * 180/Math.PI), Math.round(pI.degrees(this.vel.heading())));\r\n\r\n      const maxAngMult = -.18;\r\n      const maxAng = Math.PI * maxAngMult;\r\n      const minAng = Math.PI * -(1 + maxAngMult);\r\n      const ang = this.vel.heading();\r\n      if(ang > maxAng) this.vel.rotate((ang - maxAng) * -1);\r\n      if(ang < minAng) this.vel.rotate((ang - minAng) * -1);\r\n\r\n      if(this.logAngles) console.log('final: ', Math.round(pI.degrees(this.vel.heading())), Math.round(minAng * 180/Math.PI), Math.round(maxAng * 180/Math.PI));\r\n    }\r\n    \r\n    // if alreadyTouched and is far enough remove from touched array\r\n    if(alreadyTouched && Vector.dist(new Vector(this.position), new Vector(paddle.position)) > 150){\r\n      paddle.justTouched = paddle.justTouched.filter(b => b !== this);\r\n    }\r\n    \r\n    this.position.set(...new Vector(this.position).add(this.vel).array());\r\n  }\r\n}","import { Sprite, Texture, Graphics, Application } from \"pixi.js\";\r\n\r\nexport class Brick extends Sprite {\r\n\r\n  static tx: Texture;\r\n\r\n  static createTexture(app: Application, color: number, width: number, height: number) {\r\n    const gr = new Graphics();\r\n    gr.beginFill(color)\r\n      .drawRect(0, 0, width, height)\r\n      .endFill();\r\n    this.tx = app.renderer.generateTexture(gr, 1, 1);\r\n  }\r\n\r\n  constructor(x: number, y: number) {\r\n    super(Brick.tx);\r\n    const box = this.getBounds();\r\n    const wH = box.width * .5;\r\n    const hH = box.height * .5;\r\n    this.pivot.set(wH, hH);\r\n    this.position.set(x + wH, y + hH);\r\n  }\r\n  \r\n}","import { DisplayObject, Ticker } from \"pixi.js\";\r\nimport { Vector } from \"p5\";\r\n\r\ninterface Transformation {\r\n  position?: Vector;\r\n  scale?: Vector;\r\n  rotation?: number;\r\n  alpha?: number;\r\n}\r\n\r\ninterface Options {\r\n  enter: Transformation;\r\n  exit: Transformation;\r\n  duration: number;\r\n  delay?: number;\r\n  autoStart?: boolean;\r\n  easingFunction?: (t: number) => number;\r\n}\r\n\r\nexport const setTransition = (obj: DisplayObject, options: Options) => {\r\n\r\n  const { enter, exit, duration, delay, autoStart = true, easingFunction } = options;\r\n  const ticker = new Ticker();\r\n  let initialTime: number;\r\n  \r\n  // flags\r\n  let initCalled = false;\r\n  let started = false;\r\n  const doPosition = enter.position && exit.position;\r\n  const doScale    = enter.scale && exit.scale;\r\n  const doRotation = typeof enter.rotation === 'number' && typeof exit.rotation === 'number';\r\n  const doAlpha    = typeof enter.alpha === 'number' && typeof exit.alpha === 'number';\r\n  const doNothing  = !doPosition && !doScale && !doRotation && !doAlpha;\r\n\r\n  const run = () => {\r\n    // start if has delay or autoStart\r\n    if((delay && delay > 0 && autoStart === true) || autoStart) {\r\n      init();\r\n      setTimeout(() => start(), delay || 0);\r\n    }\r\n  }\r\n\r\n  const start = () => {\r\n    if(doNothing || started) return;\r\n    if(!initCalled) copyValuesFrom(enter);\r\n    initialTime = Date.now();\r\n    ticker.add(process);\r\n    ticker.start();\r\n    started = true;\r\n  }\r\n\r\n  const init = () => {\r\n    if(doNothing) return;\r\n    copyValuesFrom(enter);\r\n    initCalled = true;\r\n  }\r\n\r\n  const process = () => {\r\n    const now = Date.now();\r\n    const diff = now - initialTime;\r\n    const step = diff / duration;\r\n\r\n    if(step >= 1){\r\n      // set end position\r\n      copyValuesFrom(exit);\r\n      ticker.destroy();\r\n      return;\r\n    }\r\n\r\n    const res = easingFunction ? easingFunction(step) : step;\r\n    if(doPosition){\r\n      obj.position.x = calc(res, enter.position!.x, exit.position!.x);\r\n      obj.position.y = calc(res, enter.position!.y, exit.position!.y);\r\n    }\r\n    if(doScale){\r\n      obj.scale.x = calc(res, enter.scale!.x, exit.scale!.x);\r\n      obj.scale.y = calc(res, enter.scale!.y, exit.scale!.y);\r\n    }\r\n    if(doRotation) obj.rotation = calc(res, enter.rotation!, exit.rotation!);\r\n    if(doAlpha) obj.alpha = calc(res, enter.alpha!, exit.alpha!);\r\n  }\r\n\r\n  const calc = (src: number, a: number, b: number) => a + (b - a) * src;\r\n  \r\n  const copyValuesFrom = (src: Transformation) => {\r\n    if(doPosition) obj.position.copyFrom(src.position as any);\r\n    if(doScale)    obj.scale.copyFrom(src.scale as any);\r\n    if(doRotation) obj.rotation = src.rotation!;\r\n    if(doAlpha)    obj.alpha = src.alpha!;\r\n  }\r\n\r\n  //\r\n  run();\r\n\r\n  return { init, start };\r\n\r\n}","// https://gist.github.com/yukulele/2234731c0445dd5b1f4673889bf3330c\r\n\r\nexport class Ease {\r\n  static in(p = 1) {\r\n    return (t: number) => t ** p;\r\n  }\r\n  static out(p = 1) {\r\n    return (t: number) => 1 - Ease.in(p)(1 - t);\r\n  }\r\n  static inOut(p = 1) {\r\n    return (t: number): number => {\r\n      if (t <= 0.5) {\r\n        return Ease.in(p)(t * 2) / 2\r\n      }\r\n      return 1 - Ease.inOut(p)(1 - t);\r\n    }\r\n  }\r\n}","import { Ticker, Application, Container, interaction, Graphics } from 'pixi.js';\r\nimport { Paddle } from './objects/Paddle';\r\nimport { Ball } from './objects/Ball';\r\nimport { setupBricks } from './utils/setupBricks';\r\nimport { isTouching } from './isTouching';\r\nimport { setupSides } from './utils/setupSides';\r\nimport { setTransition } from './utils/setTransition';\r\nimport { Vector } from './utils/Vector';\r\nimport { Ease } from './utils/Ease';\r\n\r\nexport const initGame = () => {\r\n  \r\n  const app = new Application({ \r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n\r\n  const ticker = new Ticker();\r\n\r\n  const group = new Container();\r\n  var paddle: Paddle;\r\n  var bricks = new Container();\r\n  var ball: Ball;\r\n  var sides = new Container();\r\n\r\n  // for debugging\r\n  var extra = new Container();\r\n\r\n  const setup = () => {\r\n    const { width, height } = app.view;\r\n    \r\n    // background\r\n    const bg = new Graphics()\r\n      .beginFill(0x000000)\r\n      .drawRect(0, 0, width, height)\r\n      .endFill();\r\n    app.stage.addChild(bg);\r\n\r\n    //sides\r\n    setupSides(app, sides, 30, 0x11cccc);\r\n    app.stage.addChild(sides);\r\n\r\n    // setup bricks\r\n    bricks = setupBricks(app, bricks, 0xcc11cc, width * .8, height * .35, 8, 6, 20);\r\n    bricks.position.set(width * .1, width * .1);\r\n    group.addChild(bricks);\r\n\r\n    // setup ball\r\n    Ball.createTexture(app, 0xccf111, 20);\r\n    ball = new Ball();\r\n    \r\n    // setup paddle\r\n    Paddle.createTexture(app, 0xcc1111, width * .15, 30);\r\n    paddle = new Paddle();\r\n    paddle.position.set(width * .5, height - 60);\r\n    paddle.addBall(ball);\r\n    group.addChild(paddle);\r\n    setTransition(paddle, {\r\n      enter: {\r\n        position: new Vector(paddle.position).add(0, 300),\r\n        scale: new Vector(.3, .3),\r\n      },\r\n      exit: {\r\n        position: new Vector(paddle.position),\r\n        scale: new Vector(1, 1),\r\n      },\r\n      duration: 500,\r\n      delay: 400,\r\n      easingFunction: Ease.out(3),\r\n    });\r\n\r\n    // add group to stage\r\n    app.stage.addChild(group);\r\n\r\n    // add extra to stage\r\n    app.stage.addChild(extra);\r\n\r\n    app.stage.interactive = true;\r\n    app.stage.on('mousemove', handleMouseMove);\r\n    app.stage.on('mousedown', handleMouseClick);\r\n    app.renderer.plugins.interaction.cursorStyles.default = 'none';\r\n\r\n    ticker.add(process);\r\n    ticker.start();\r\n  }\r\n\r\n  const process = () => {\r\n    ball.process(paddle);\r\n\r\n    bricks.children.forEach(brick => {\r\n      const touch = isTouching(brick, ball);\r\n      if(touch){\r\n        ball.bounce(touch);\r\n        bricks.removeChild(brick);\r\n      }\r\n    });\r\n\r\n    /*const p = new Graphics()\r\n          .beginFill(0xffffff)\r\n          .drawCircle(ball.position.x, ball.position.y, 5)\r\n          .endFill();\r\n        extra.addChild(p);*/\r\n\r\n    sides.children.forEach(side => {\r\n      const touch = isTouching(side, ball, 1);\r\n      if(touch) ball.bounce(touch);\r\n    });\r\n  }\r\n\r\n  const handleMouseMove = (event: interaction.InteractionEvent) => {\r\n    paddle.move(event.data.global.x);\r\n  }\r\n\r\n  const handleMouseClick = (event: interaction.InteractionEvent) => {\r\n    if(ball.inStage) return;\r\n    ball.getGlobalPosition().copyTo(ball.position);\r\n    app.stage.addChild(ball);\r\n    ball.release();\r\n  }\r\n\r\n  setup();\r\n\r\n  return app;\r\n}","import { Container, Graphics, Application } from \"pixi.js\";\r\n\r\nexport const setupSides = (app: Application, sides: Container, sideSize: number, sideColor: number) => {\r\n  const { width, height } = app.view;\r\n  var top = new Graphics()\r\n    .beginFill(sideColor)\r\n    .drawRect(0, -sideSize, width, sideSize)\r\n    .endFill();\r\n  var right = new Graphics()\r\n    .beginFill(sideColor)\r\n    .drawRect(width, 0, sideSize, height)\r\n    .endFill();\r\n  var bottom = new Graphics()\r\n    .beginFill(sideColor)\r\n    .drawRect(0, height, width, sideSize)\r\n    .endFill();\r\n  var left = new Graphics()\r\n    .beginFill(sideColor)\r\n    .drawRect(-sideSize, 0, sideSize, height)\r\n    .endFill();\r\n  sides.addChild(top);\r\n  sides.addChild(right);\r\n  sides.addChild(bottom);\r\n  sides.addChild(left);\r\n}","import { Application, Container } from \"pixi.js\";\r\nimport { Brick } from \"../objects/Brick\";\r\nimport { setTransition } from \"./setTransition\";\r\nimport { Vector } from \"./Vector\";\r\nimport Bezier from 'bezier-easing';\r\n\r\nexport const setupBricks = (app: Application, bricks: Container, color: number, groupW: number, groupH: number, numX: number, numY: number, padding: number) => {\r\n  const bricksW = (groupW - padding * (numX - 1)) / numX;\r\n  const bricksH = (groupH - padding * (numY - 1)) / numY;\r\n\r\n  const easing = Bezier(.48,1.52,.34,.87);\r\n\r\n  Brick.createTexture(app, color, bricksW, bricksH);\r\n  Array\r\n    .from({ length: numX * numY })\r\n    .forEach((_, index: number) => {\r\n      const y = Math.floor(index / numX);\r\n      const x = index - y * numX;\r\n      const brick = new Brick(x * (bricksW + padding), y * (bricksH + padding));\r\n      bricks.addChild(brick);\r\n      setTransition(brick, {\r\n        enter: {\r\n          position: new Vector(brick.position).add(Vector.random2D().mult(100)),\r\n          scale: new Vector(0.4, 0.4),\r\n          alpha: 0,\r\n          rotation: Math.random() * Math.PI * .2 - Math.PI * .1,\r\n        },\r\n        exit: {\r\n          position: new Vector(brick.position),\r\n          scale: new Vector(1, 1),\r\n          alpha: 1,\r\n          rotation: 0,\r\n        },\r\n        duration: 600 + Math.random() * 200,\r\n        delay: Math.random() * 700,\r\n        easingFunction: easing,\r\n      });\r\n    });\r\n\r\n  return bricks;\r\n}","import * as React from 'react';\r\nimport { initGame } from './main';\r\nimport { Application } from 'pixi.js';\r\n\r\ninterface GameProps {}\r\n\r\nconst Game: React.FC<GameProps> = () => {\r\n\r\n  const divRef = React.useRef(null as null|HTMLDivElement);\r\n  const gameRef = React.useRef(null as null|Application);\r\n\r\n  React.useEffect(() => {\r\n    gameRef.current = initGame();\r\n    divRef.current!.append(gameRef.current.view);\r\n  }, []);\r\n  \r\n  return (<div ref={divRef}></div>);\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport Game from '../../game/Game';\n\nconst App = () => {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}