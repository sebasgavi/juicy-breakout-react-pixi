{"version":3,"sources":["game/utils/pI.ts","game/utils/settings.ts","game/objects/Paddle.ts","game/utils/Vector.ts","game/utils/setTransition.ts","game/utils/Ease.ts","game/objects/Ball.ts","game/objects/Brick.ts","game/utils/setupBricks.ts","game/utils/sound.ts","game/utils/particles.ts","game/isTouching.ts","game/main.ts","game/utils/setupAngleTest.ts","game/utils/setupTransitionTest.ts","game/utils/setupSides.ts","game/Game.tsx","components/App/App.tsx","index.tsx"],"names":["pI","p5","settings","transition","wobble","sound","color","squishy","scale","rotation","bounceColor","music","angles","autoStart","Paddle","box","tx","getBounds","wH","width","hH","height","pivot","set","app","gr","Graphics","beginFill","drawRect","endFill","this","renderer","generateTexture","x","mov","Math","abs","map","y","ball","position","addChild","Sprite","Vector","z","p","a","b","c","length","p5Vector","setTransition","obj","options","initialTime","duration","delay","frames","onFinish","easingFunction","t","ticker","Ticker","initCalled","started","doPosition","every","s","doScale","doRotation","doAlpha","alpha","doNothing","start","copyValuesFrom","Date","now","add","process","init","outerStep","destroy","index","findIndex","time","frameA","frameB","innerStep","res","calc","src","copyFrom","setted","i","filter","n","slice","curr","prev","v","forEach","aIndex","bIndex","timeDiff","indexDiff","timeStep","Array","from","_","modIndex","modTime","calculateStepTimes","setTimeout","Ease","in","inOut","Ball","inStage","vel","logAngles","lastTouchedObj","lastTouchedTime","touchTransform","colorBounce","size","drawCircle","clear","txBounce","touch","top","right","bottom","left","setWobble","setSquishy","texture","arc","PI","r","random","rotate","paddle","bounced","bounceTextureDuration","heading","maxAngMod","maxDiff","rot","console","log","round","degrees","maxAng","minAng","ang","array","squishyBezier","initialScale","wobbleEase","Bezier","Brick","lastTxChangedTime","txDists","chroma","colors","col","num","floor","hitTextureDuration","wall","bricks","emitter","isTouching","objA","objB","type","renderable","boxA","getBoundsHelper","boxB","isTouchingBox","getTouchingSidesInfo","sides","vectorA","fromBox","vectorB","angle","sub","mod","leftTop","rightTop","leftTopAng","rightTopAng","leftBottomAng","rightBottomAng","bounds","prevScale","prevRotation","updateTransform","lastBrickHitTime","lastBrickHitIndex","dir","Howl","loop","volume","play","elapsed","cont","particles","point","updateSpawnPos","resetPositionTracking","emit","diff","update","initGame","Application","window","innerWidth","innerHeight","group","Container","extra","canMovePaddle","bounce","wobbleBricks","children","some","brick","removeChild","side","touchedBrick","minDist","maxDist","view","dist","changeTexture","handleMouseMove","event","move","data","global","handleMouseClick","getGlobalPosition","copyTo","stage","release","createTexture","interactive","style","TextStyle","fontSize","fill","on","ev","fromAngle","mult","leftBottom","rightBottom","Object","keys","find","k","removeChildren","lineStyle","moveTo","lineTo","Text","setupAngleTest","setInterval","setupTransitionTest","bg","setupSides","groupW","groupH","numX","numY","padding","bricksW","bricksH","easing","random2D","setupBricks","addBall","out","plugins","interaction","cursorStyles","default","setup","Game","divRef","React","gameRef","current","append","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec954023.chunk.js","sourcesContent":["import p5 from \"p5\";\r\n\r\nexport const pI = new p5(() => null);","export const settings = {\r\n  brick: {\r\n    transition: true,\r\n    wobble: true,\r\n    sound: true,\r\n    color: true,\r\n  },\r\n  paddle: {\r\n    transition: true,\r\n    squishy: true,\r\n    sound: true,\r\n  },\r\n  ball: {\r\n    squishy: true,\r\n    wobble: true,\r\n    scale: true,\r\n    rotation: true,\r\n    bounceColor: true,\r\n  },\r\n  wall: {\r\n    sound: true,\r\n  },\r\n  general: {\r\n    music: false,\r\n  },\r\n  test: {\r\n    transition: false,\r\n    angles: false,\r\n    autoStart: false,\r\n  }\r\n}","import { Application, Graphics, Sprite, Texture } from 'pixi.js';\r\nimport { Ball } from './Ball';\r\nimport { pI } from '../utils/pI';\r\nimport { settings } from '../utils/settings';\r\n\r\nexport class Paddle extends Sprite {\r\n\r\n  static tx: Texture;\r\n\r\n  static createTexture(app: Application, color: number, width: number, height: number) {\r\n    const gr = new Graphics();\r\n    gr.beginFill(color)\r\n      .drawRect(0, 0, width, height)\r\n      .endFill();\r\n    this.tx = app.renderer.generateTexture(gr, 1, 1);\r\n  }\r\n\r\n  constructor() {\r\n    super(Paddle.tx);\r\n    const box = this.getBounds();\r\n    const wH = box.width * .5;\r\n    const hH = box.height * .5;\r\n    this.pivot.set(wH, hH);\r\n  }\r\n\r\n  move(x: number) {\r\n    if(settings.paddle.squishy){\r\n      const mov = Math.abs(this.x - x);\r\n      const max = 60;\r\n      this.scale.x = pI.map(mov, 0, max, 1, 1.6, true);\r\n      this.scale.y = pI.map(mov, 0, max, 1, 0.6, true);\r\n    }\r\n    this.x = x;\r\n  }\r\n\r\n  process() {\r\n    this.scale.set(1, 1);\r\n  }\r\n\r\n  addBall(ball: Ball) {\r\n    ball.position.set(this.getBounds().width * .5, ball.getBounds().height * -.5);\r\n    this.addChild(ball);\r\n  }\r\n}","import { Vector as p5Vector } from \"p5\";\r\nimport { Rectangle, IPoint } from \"pixi.js\";\r\n\r\nexport class Vector extends p5Vector implements IPoint {\r\n\r\n  constructor(x?: number | { x: number, y: number }, y?: number, z?:number) {\r\n    if(typeof x === 'object'){\r\n      y = x.y;\r\n      x = x.x;\r\n    }\r\n    // @ts-ignore\r\n    super(x, y, z);\r\n  }\r\n\r\n  static fromBox(box: Rectangle) {\r\n    return new Vector(box.x + box.width * .5, box.y + box.height * .5);\r\n  }\r\n\r\n  copyFrom(p: IPoint) {\r\n    this.x = p.x;\r\n    this.y = p.y;\r\n    return this;\r\n  }\r\n\r\n  copyTo(p: IPoint) {\r\n    p.x = this.x;\r\n    p.y = this.y;\r\n    return p;\r\n  }\r\n\r\n  equals(a?: any, b?: any, c?: any){\r\n    if(\r\n      a instanceof Vector || // vector instance\r\n      (typeof a === 'number' && typeof b === 'number') ||\r\n      (a.length > 0 && a[0] instanceof Vector) // array?\r\n    ){\r\n      return super.equals(a, b, c);\r\n    }\r\n    if(a){\r\n      return this.x === a.x && this.y === a.y;\r\n    }\r\n    return false;\r\n  }\r\n}","import { DisplayObject, Ticker } from \"pixi.js\";\r\nimport { Vector } from \"p5\";\r\nimport { pI } from \"./pI\";\r\n\r\ninterface Transformation {\r\n  time?: number;\r\n  position?: Vector;\r\n  scale?: Vector;\r\n  rotation?: number;\r\n  alpha?: number;\r\n}\r\n\r\ninterface Options {\r\n  frames: Transformation[];\r\n  duration: number;\r\n  delay?: number;\r\n  autoStart?: boolean;\r\n  easingFunction?: (t: number) => number;\r\n  onFinish?: () => void;\r\n}\r\n\r\nexport const setTransition = (obj: DisplayObject, options: Options) => {\r\n\r\n  const { duration, delay, autoStart = true, frames, onFinish } = options;\r\n  const easingFunction = options.easingFunction || ((t) => t);\r\n\r\n  const ticker = new Ticker();\r\n  let initialTime: number;\r\n  \r\n  // flags\r\n  let initCalled = false;\r\n  let started = false;\r\n  const doPosition = frames.every(s => s.position);\r\n  const doScale    = frames.every(s => s.scale);\r\n  const doRotation = frames.every(s => typeof s.rotation === 'number');\r\n  const doAlpha    = frames.every(s => typeof s.alpha === 'number');\r\n  const doNothing  = (!doPosition && !doScale && !doRotation && !doAlpha) || frames.length < 2;\r\n\r\n  // initial processing\r\n  const initialProcessing = () => {\r\n    // calculate time for steps\r\n    if(!doNothing) calculateStepTimes();\r\n\r\n    // start if has delay or autoStart\r\n    if((delay && delay > 0 && autoStart === true) || autoStart) {\r\n      init();\r\n      setTimeout(() => start(), delay || 0);\r\n    }\r\n  }\r\n\r\n  // start transition\r\n  const start = () => {\r\n    if(doNothing || started) return;\r\n    if(!initCalled) copyValuesFrom(frames[0]);\r\n    initialTime = Date.now();\r\n    ticker.add(process);\r\n    ticker.start();\r\n    started = true;\r\n  }\r\n\r\n  // set initial values\r\n  const init = () => {\r\n    if(doNothing) return;\r\n    copyValuesFrom(frames[0]);\r\n    initCalled = true;\r\n  }\r\n\r\n  // ticker process\r\n  const process = () => {\r\n    // calculate main step (beginning to end of transition)\r\n    const now = Date.now();\r\n    const diff = now - initialTime;\r\n    const outerStep = diff / duration;\r\n\r\n    // set end position\r\n    if(outerStep >= 1){\r\n      copyValuesFrom(frames[frames.length - 1]);\r\n      ticker.destroy();\r\n      if(typeof onFinish === 'function') onFinish();\r\n      return;\r\n    }\r\n\r\n    // get next frame index\r\n    const index = frames.findIndex(({ time }) => (outerStep < time!));\r\n    // get frames for current transition\r\n    const frameA = frames[index - 1];\r\n    const frameB = frames[index];\r\n    // calculate inner step (number between 0 and 1, inside the frames time range)\r\n    const innerStep = pI.map(outerStep, frameA.time!, frameB.time!, 0, 1, true);\r\n    // calculate modifier (y position for x = innerStep)\r\n    const res = easingFunction(innerStep);\r\n    // apply to relevant parameter\r\n    if(doPosition){\r\n      obj.position.x = calc(res, frameA.position!.x, frameB.position!.x);\r\n      obj.position.y = calc(res, frameA.position!.y, frameB.position!.y);\r\n    }\r\n    if(doScale){\r\n      obj.scale.x = calc(res, frameA.scale!.x, frameB.scale!.x);\r\n      obj.scale.y = calc(res, frameA.scale!.y, frameB.scale!.y);\r\n    }\r\n    if(doRotation) obj.rotation = calc(res, frameA.rotation!, frameB.rotation!);\r\n    if(doAlpha) obj.alpha = calc(res, frameA.alpha!, frameB.alpha!);\r\n  }\r\n\r\n  // map src to range\r\n  const calc = (src: number, a: number, b: number) => a + (b - a) * src;\r\n  \r\n  const copyValuesFrom = (src: Transformation) => {\r\n    if(doPosition) obj.position.copyFrom(src.position as any);\r\n    if(doScale)    obj.scale.copyFrom(src.scale as any);\r\n    if(doRotation) obj.rotation = src.rotation!;\r\n    if(doAlpha)    obj.alpha = src.alpha!;\r\n  }\r\n\r\n  const calculateStepTimes = () => {\r\n    // set first and last frames with 0 and 1\r\n    frames[0].time = 0;\r\n    frames[frames.length - 1].time = 1;\r\n\r\n    // only makes sense if there's more than 2\r\n    if(frames.length === 2) return;\r\n\r\n    // get frames with time set\r\n    const setted = frames // map to index or -1\r\n      .map(({ time: t }, i) => (typeof t === 'number' && (t >= 0 || t <= 1) ? i : -1))\r\n      .filter(n => n >= 0); // remove -1\r\n\r\n    setted.slice(1) // remove first (0)\r\n      .map((curr, i) => {\r\n        const prev = setted[i];\r\n        // only return group if is not consecutive\r\n        if(prev + 1 < curr) return [prev,curr];\r\n        return null;\r\n      })\r\n      .filter(v => v) // remove emtpy values\r\n      .forEach(([aIndex, bIndex]: any) => {\r\n        //console.log(aIndex, bIndex);\r\n        const frameA = frames[aIndex];\r\n        let frameB = frames[bIndex];\r\n        // to prevent range errors\r\n        if(frameA.time! > frameB.time!) frameB = frameA;\r\n        // dime difference in range\r\n        const timeDiff = frameB.time! - frameA.time!;\r\n        // diff between indexes (spaces between)\r\n        const indexDiff = bIndex - aIndex;\r\n        // time division\r\n        const timeStep = timeDiff / indexDiff;\r\n        // loop spaces to fill (indexDiff - 1)\r\n        Array.from({ length: indexDiff - 1 })\r\n          .forEach((_, i) => {\r\n            // empty index\r\n            const modIndex = aIndex + i + 1;\r\n            // beginning + step\r\n            const modTime = frameA.time! + timeStep * (i + 1);\r\n            frames[modIndex].time = modTime;\r\n          });\r\n      });\r\n  }\r\n\r\n  //\r\n  initialProcessing();\r\n\r\n  return { init, start };\r\n\r\n}","// https://gist.github.com/yukulele/2234731c0445dd5b1f4673889bf3330c\r\n\r\nexport class Ease {\r\n  static in(p = 1) {\r\n    return (t: number) => t ** p;\r\n  }\r\n  static out(p = 1) {\r\n    return (t: number) => 1 - Ease.in(p)(1 - t);\r\n  }\r\n  static inOut(p = 1) {\r\n    return (t: number): number => {\r\n      if (t <= 0.5) {\r\n        return Ease.in(p)(t * 2) / 2\r\n      }\r\n      return 1 - Ease.inOut(p)(1 - t);\r\n    }\r\n  }\r\n}","import { Sprite, Graphics, Application, Texture, DisplayObject } from \"pixi.js\";\r\nimport { isTouchingReturnType, withTouchTransform } from \"../isTouching\";\r\nimport { Paddle } from \"./Paddle\";\r\nimport { Vector } from \"../utils/Vector\";\r\nimport { pI } from \"../utils/pI\";\r\nimport { setTransition } from \"../utils/setTransition\";\r\nimport Bezier from 'bezier-easing';\r\nimport { settings } from \"../utils/settings\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\nexport class Ball extends Sprite implements withTouchTransform {\r\n\r\n  static tx: Texture;\r\n  static txBounce: Texture;\r\n  static squishyBezier = Bezier(0,1.54,.37,.74);\r\n  static wobbleEase = Ease.inOut(1.5);\r\n  static bounceTextureDuration = 100;\r\n\r\n  inStage: boolean;\r\n  vel: Vector;\r\n\r\n  logAngles = false;\r\n\r\n  lastTouchedObj: DisplayObject|null = null;\r\n  lastTouchedTime: number = 0;\r\n\r\n  touchTransform = {\r\n    scale: new Vector(1, 1),\r\n    rotation: 0,\r\n  }\r\n\r\n  static createTexture(app: Application, color: number, colorBounce: number, size: number) {\r\n    const gr = new Graphics();\r\n    gr.beginFill(color)\r\n      .drawCircle(0, 0, size)\r\n      .endFill();\r\n    // regular\r\n    this.tx = app.renderer.generateTexture(gr, 1, 1);\r\n    gr.clear()\r\n      .beginFill(colorBounce)\r\n      .drawCircle(0, 0, size)\r\n      .endFill();\r\n    // bounce\r\n    this.txBounce = app.renderer.generateTexture(gr, 1, 1);\r\n  }\r\n\r\n  constructor() {\r\n    super(Ball.tx);\r\n    const box = this.getBounds();\r\n    const wH = box.width * .5;\r\n    const hH = box.height * .5;\r\n    this.pivot.set(wH, hH);\r\n    this.inStage = false;\r\n    this.vel = new Vector();\r\n  }\r\n\r\n  bounce(touch: isTouchingReturnType, obj: DisplayObject|null = null) {\r\n    if(!this.inStage) return false;\r\n    if(obj && this.lastTouchedObj === obj) return false;\r\n    this.lastTouchedObj = obj;\r\n    const { top, right, bottom, left } = touch;\r\n    if(top || bottom) this.vel.y *= -1;\r\n    else if(left || right) this.vel.x *= -1;\r\n    // wobble (plus squishy if enabled)\r\n    if(settings.ball.wobble) this.setWobble(settings.ball.squishy);\r\n    // only squishy\r\n    else if(settings.ball.squishy) this.setSquishy();\r\n    if(settings.ball.bounceColor) {\r\n      this.lastTouchedTime = Date.now();\r\n      this.texture = Ball.txBounce;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  release() {\r\n    this.inStage = true;\r\n    this.vel = new Vector(0, -10);\r\n    const arc = Math.PI * .3;\r\n    const r = Math.random() * arc - arc * .5;\r\n    this.vel.rotate(r);\r\n  }\r\n\r\n  process(paddle: Paddle, touch: isTouchingReturnType|false, bounced: boolean) {\r\n    if(!this.inStage) return;\r\n\r\n    if(this.texture === Ball.txBounce){\r\n      const diff = Date.now() - this.lastTouchedTime;\r\n      if(diff > Ball.bounceTextureDuration) this.texture = Ball.tx;\r\n    }\r\n\r\n    if(settings.ball.scale) this.scale.set(1.5, 1);\r\n    if(settings.ball.rotation) this.rotation = this.vel.heading();\r\n\r\n    if(touch && touch.top && bounced){\r\n      const maxAngMod = Math.PI * .1;\r\n      const maxDiff = paddle.getBounds(true).width * .5 + this.getBounds(true).width * .5;\r\n      const diff = this.position.x - paddle.position.x;\r\n      const diffNormal = diff / maxDiff;\r\n      const rot = maxAngMod * diffNormal;\r\n\r\n      if(this.logAngles) console.log('\\n\\nincoming: ', Math.round(pI.degrees(this.vel.heading())));\r\n      if(this.logAngles) console.log('inverted: ', Math.round(pI.degrees(this.vel.heading())));\r\n      this.vel.rotate(rot);\r\n      if(this.logAngles) console.log('rotated: ', Math.round(rot * 180/Math.PI), Math.round(pI.degrees(this.vel.heading())));\r\n\r\n      const maxAngMult = -.18;\r\n      const maxAng = Math.PI * maxAngMult;\r\n      const minAng = Math.PI * -(1 + maxAngMult);\r\n      const ang = this.vel.heading();\r\n      if(ang > maxAng) this.vel.rotate((ang - maxAng) * -1);\r\n      if(ang < minAng) this.vel.rotate((ang - minAng) * -1);\r\n\r\n      if(this.logAngles) console.log('final: ', Math.round(pI.degrees(this.vel.heading())), Math.round(minAng * 180/Math.PI), Math.round(maxAng * 180/Math.PI));\r\n    }\r\n    \r\n    this.position.set(...new Vector(this.position).add(this.vel).array());\r\n  }\r\n\r\n  setSquishy() {\r\n    setTransition(this, {\r\n      frames: [\r\n        { scale: new Vector(1.5, 1.5) },\r\n        { scale: new Vector(this.scale) },\r\n      ],\r\n      duration: 50,\r\n      autoStart: true,\r\n      easingFunction: Ball.squishyBezier,\r\n    });\r\n  }\r\n\r\n  setWobble(squishy: boolean) {\r\n    const initialScale = new Vector(this.scale);\r\n    setTransition(this, {\r\n      frames: [\r\n        { scale: squishy ? new Vector(1.5, 1.5) : initialScale },\r\n        { scale: new Vector(1.4, .7) },\r\n        { scale: new Vector(1, 1.3) },\r\n        { scale: new Vector(1.2, .8) },\r\n        { scale: initialScale },\r\n      ],\r\n      duration: 800,\r\n      autoStart: true,\r\n      easingFunction: Ball.wobbleEase,\r\n    });\r\n  }\r\n}","import { Sprite, Texture, Graphics, Application } from \"pixi.js\";\r\nimport chroma from 'chroma-js';\r\n\r\nexport class Brick extends Sprite {\r\n\r\n  static tx: Texture;\r\n  static txDists: Texture[];\r\n  static hitTextureDuration = 200;\r\n\r\n  lastTxChangedTime = 0;\r\n\r\n  static createTexture(app: Application, color: number, width: number, height: number) {\r\n    const gr = new Graphics();\r\n    gr.beginFill(color)\r\n      .drawRect(0, 0, width, height)\r\n      .endFill();\r\n    this.tx = app.renderer.generateTexture(gr, 1, 1);\r\n\r\n    this.txDists = chroma\r\n      .scale(['blue', 'white'])\r\n      .colors(20)\r\n      .map((col) => {\r\n        gr.clear()\r\n          .beginFill(chroma(col).num())\r\n          .drawRect(0, 0, width, height)\r\n          .endFill();\r\n        return app.renderer.generateTexture(gr, 1, 1);\r\n      });\r\n  }\r\n\r\n  constructor(x: number, y: number) {\r\n    super(Brick.tx);\r\n    const box = this.getBounds();\r\n    const wH = box.width * .5;\r\n    const hH = box.height * .5;\r\n    this.pivot.set(wH, hH);\r\n    this.position.set(x + wH, y + hH);\r\n  }\r\n\r\n  changeTexture(n: number) {\r\n    if(n < 0) n = 0;\r\n    if(n > 1) n = 1;\r\n    const index = Math.floor(n * (Brick.txDists.length - 1));\r\n    this.texture = Brick.txDists[index];\r\n    this.lastTxChangedTime = Date.now();\r\n  }\r\n\r\n  process() {\r\n    if(this.texture !== Brick.tx){\r\n      const diff = Date.now() - this.lastTxChangedTime;\r\n      if(diff > Brick.hitTextureDuration) this.texture = Brick.tx;\r\n    }\r\n  }\r\n  \r\n}","import { Application, Container } from \"pixi.js\";\r\nimport { Brick } from \"../objects/Brick\";\r\nimport { setTransition } from \"./setTransition\";\r\nimport { Vector } from \"./Vector\";\r\nimport Bezier from 'bezier-easing';\r\nimport { settings } from \"./settings\";\r\n\r\nexport const setupBricks = (app: Application, bricks: Container, color: number, groupW: number, groupH: number, numX: number, numY: number, padding: number) => {\r\n  const bricksW = (groupW - padding * (numX - 1)) / numX;\r\n  const bricksH = (groupH - padding * (numY - 1)) / numY;\r\n\r\n  const easing = Bezier(.48,1.52,.34,.87);\r\n\r\n  Brick.createTexture(app, color, bricksW, bricksH);\r\n  Array\r\n    .from({ length: numX * numY })\r\n    .forEach((_, index: number) => {\r\n      const y = Math.floor(index / numX);\r\n      const x = index - y * numX;\r\n      const brick = new Brick(x * (bricksW + padding), y * (bricksH + padding));\r\n      bricks.addChild(brick);\r\n      if(!settings.brick.transition) return;\r\n      setTransition(brick, {\r\n        frames: [\r\n          {\r\n            position: new Vector(brick.position).add(Vector.random2D().mult(100)),\r\n            scale: new Vector(0.4, 0.4),\r\n            alpha: 0,\r\n            rotation: Math.random() * Math.PI * .2 - Math.PI * .1,\r\n          },\r\n          {\r\n            position: new Vector(brick.position),\r\n            scale: new Vector(1, 1),\r\n            alpha: 1,\r\n            rotation: 0,\r\n          },\r\n        ],\r\n        duration: 600 + Math.random() * 200,\r\n        delay: Math.random() * 700,\r\n        easingFunction: easing,\r\n      });\r\n    });\r\n\r\n  return bricks;\r\n}","import { Howl } from \"howler\";\r\nimport { settings } from \"./settings\";\r\n\r\nlet music: Howl;\r\nlet wall: Howl;\r\nlet paddle: Howl;\r\nlet bricks: Howl[];\r\n\r\nlet lastBrickHitTime = 0;\r\nlet lastBrickHitIndex = 0;\r\n\r\n\r\nconst load = () => {\r\n  const dir = `${process.env.PUBLIC_URL}/assets/sound`;\r\n\r\n  bricks = Array.from({ length: 12 }).map((_, index) => {\r\n    return new Howl({\r\n      src: `${dir}/pling${index + 1}.mp3`\r\n    });\r\n  });\r\n\r\n  paddle = new Howl({\r\n    src: `${dir}/ball-paddle.mp3`\r\n  });\r\n\r\n  wall = new Howl({\r\n    src: `${dir}/ball-wall.mp3`\r\n  });\r\n\r\n  music = new Howl({\r\n    src: `${dir}/juicy_breakout-theme.mp3`,\r\n    loop: true,\r\n    volume: .3,\r\n  });\r\n\r\n  if(settings.general.music) music.play();\r\n}\r\n\r\nconst hitBrick = () => {\r\n  if(!settings.brick.sound) return;\r\n  const now = Date.now();\r\n  const diff = now - lastBrickHitTime;\r\n  lastBrickHitIndex++;\r\n  if(diff > 1000) lastBrickHitIndex = 0;\r\n  if(lastBrickHitIndex >= bricks.length) lastBrickHitIndex = bricks.length - 1;\r\n  bricks[lastBrickHitIndex].play();\r\n  lastBrickHitTime = now;\r\n}\r\n\r\nconst hitPaddle = () => {\r\n  if(!settings.paddle.sound) return;\r\n  paddle.play();\r\n}\r\n\r\nconst hitWall = () => {\r\n  if(!settings.wall.sound) return;\r\n  wall.play();\r\n}\r\n\r\nexport const sound = {\r\n  load,\r\n  brick: hitBrick,\r\n  paddle: hitPaddle,\r\n  wall: hitWall,\r\n}","import { Container, IPoint, Application, Graphics } from \"pixi.js\";\r\nimport * as particles from 'pixi-particles';\r\n\r\nlet emitter: particles.Emitter;\r\nlet elapsed = Date.now();\r\n\r\nconst setup = (app: Application, cont: Container) => {\r\n  const gr = new Graphics();\r\n  gr.beginFill(0xffffff)\r\n    .drawCircle(0, 0, 20)\r\n    .endFill();\r\n  const tx = app.renderer.generateTexture(gr, 1, 1);\r\n  \r\n  emitter = new particles.Emitter(\r\n    cont,\r\n    [ tx ],\r\n    {\r\n      \"alpha\": {\r\n        \"start\": 0.3,\r\n        \"end\": 0.43\r\n      },\r\n      \"scale\": {\r\n        \"start\": 0.32,\r\n        \"end\": 0.01,\r\n        \"minimumScaleMultiplier\": 1.02\r\n      },\r\n      \"color\": {\r\n        \"start\": \"#e680ed\",\r\n        \"end\": \"#ff0000\"\r\n      },\r\n      \"speed\": {\r\n        \"start\": 40,\r\n        \"end\": 100,\r\n        \"minimumSpeedMultiplier\": 2\r\n      },\r\n      \"acceleration\": {\r\n        \"x\": 0,\r\n        \"y\": 0\r\n      },\r\n      \"maxSpeed\": 0,\r\n      \"startRotation\": {\r\n        \"min\": 0,\r\n        \"max\": 360\r\n      },\r\n      \"noRotation\": true,\r\n      \"rotationSpeed\": {\r\n        \"min\": 0,\r\n        \"max\": 0\r\n      },\r\n      \"lifetime\": {\r\n        \"min\": 0.39,\r\n        \"max\": 0.9\r\n      },\r\n      \"blendMode\": \"normal\",\r\n      \"frequency\": 0.001,\r\n      \"emitterLifetime\": 0.1,\r\n      \"maxParticles\": 200,\r\n      \"pos\": {\r\n        \"x\": 0,\r\n        \"y\": 0\r\n      },\r\n      \"addAtBack\": false,\r\n      \"spawnType\": \"point\"\r\n    }\r\n  );\r\n}\r\n\r\nconst hit = (point: IPoint) => {\r\n  emitter.updateSpawnPos(point.x, point.y);\r\n  emitter.resetPositionTracking();\r\n  emitter.emit = true;\r\n}\r\n\r\nconst update = () => {\r\n  const now = Date.now();\r\n  const diff = now - elapsed;\r\n\r\n  if(emitter.emit && diff > 500) emitter.emit = false;\r\n\r\n  emitter.update(diff * 0.001);\r\n  elapsed = now;\r\n}\r\n\r\nexport default {\r\n  setup,\r\n  hit,\r\n  update,\r\n}","import { DisplayObject, Rectangle } from \"pixi.js\"\r\nimport { Vector } from \"./utils/Vector\";\r\n\r\nexport interface isTouchingReturnType {\r\n  top: boolean;\r\n  right: boolean;\r\n  bottom: boolean;\r\n  left: boolean;\r\n}\r\n\r\nexport interface withTouchTransform extends DisplayObject {\r\n  touchTransform: {\r\n    scale?: Vector;\r\n    rotation?: number;\r\n  }\r\n}\r\n\r\nexport const isTouching = (objA: DisplayObject|withTouchTransform, objB: DisplayObject|withTouchTransform, type: 0|1 = 0): isTouchingReturnType|false => {\r\n  if(!objA.renderable || !objB.renderable) return false;\r\n  const boxA = getBoundsHelper(objA);\r\n  const boxB = getBoundsHelper(objB);\r\n  const touch = isTouchingBox(boxA, boxB);\r\n  if(touch){\r\n    const { sides } = getTouchingSidesInfo(boxA, boxB, type);\r\n    return { ...sides };\r\n  }\r\n  return false;\r\n}\r\n\r\nexport const getTouchingSidesInfo = (boxA: Rectangle, boxB: Rectangle, type: 0|1 = 0) => {\r\n  const vectorA = Vector.fromBox(boxA);\r\n  const vectorB = Vector.fromBox(boxB);\r\n  const angle = Vector.sub(vectorB, vectorA).heading();\r\n\r\n  const mod = type === 0 ? new Vector(boxB.width * .5, boxB.height * .5) : new Vector();\r\n\r\n  let leftTop = new Vector(boxA.x - mod.x, boxA.y - mod.y);\r\n  let rightTop = new Vector(boxA.x + boxA.width + mod.x, boxA.y - mod.y);\r\n  \r\n  const leftTopAng = Vector.sub(leftTop, vectorA).heading();\r\n  const rightTopAng = Vector.sub(rightTop, vectorA).heading();\r\n  const leftBottomAng = leftTopAng * -1;\r\n  const rightBottomAng = rightTopAng * -1;\r\n\r\n  const sides = { \r\n    top:    angle >= leftTopAng && angle < rightTopAng,\r\n    right:  angle >= rightTopAng && angle < rightBottomAng,\r\n    bottom: angle >= rightBottomAng && angle < leftBottomAng,\r\n    left:   angle >= leftBottomAng || angle < leftTopAng,\r\n  }\r\n\r\n  return { angle, leftTopAng, rightTopAng, leftBottomAng, rightBottomAng, vectorA, vectorB, sides };\r\n}\r\n\r\nconst isTouchingBox = (boxA: Rectangle, boxB: Rectangle) => {\r\n  const left = boxB.x + boxB.width > boxA.x;\r\n  const right = boxB.x < boxA.x + boxA.width;\r\n  const top = boxB.y + boxB.height > boxA.y;\r\n  const bottom = boxB.y < boxA.y + boxA.height;\r\n  return left && right && top && bottom;\r\n}\r\n\r\nconst getBoundsHelper = (obj: DisplayObject|withTouchTransform) => {\r\n  let bounds;\r\n  const { scale, rotation } = 'touchTransform' in obj && obj.touchTransform ? obj.touchTransform : {} as any;\r\n  const doRotation = typeof rotation === 'number';\r\n  const doScale = scale instanceof Vector;\r\n  if(doRotation || doScale){\r\n    const prevScale = new Vector(obj.scale);\r\n    const prevRotation = obj.rotation;\r\n    if(doScale) obj.scale.copyFrom(scale);\r\n    if(doRotation) obj.rotation = rotation;\r\n    obj.updateTransform();\r\n    bounds = obj.getBounds(true);\r\n    if(doScale) obj.rotation = prevRotation;\r\n    if(doRotation) obj.scale.copyFrom(prevScale);\r\n    obj.updateTransform();\r\n  } else {\r\n    bounds = obj.getBounds(true);\r\n  }\r\n  return bounds;\r\n}","import { Ticker, Application, Container, interaction, Graphics } from 'pixi.js';\r\nimport { Paddle } from './objects/Paddle';\r\nimport { Ball } from './objects/Ball';\r\nimport { setupBricks } from './utils/setupBricks';\r\nimport { isTouching } from './isTouching';\r\nimport { setupSides } from './utils/setupSides';\r\nimport { setTransition } from './utils/setTransition';\r\nimport { Vector } from './utils/Vector';\r\nimport { Ease } from './utils/Ease';\r\nimport { settings } from './utils/settings';\r\nimport { setupAngleTest } from './utils/setupAngleTest';\r\nimport { setupTransitionTest } from './utils/setupTransitionTest';\r\nimport { pI } from './utils/pI';\r\nimport { sound } from './utils/sound';\r\nimport { Brick } from './objects/Brick';\r\nimport particles from './utils/particles';\r\n\r\nexport const initGame = () => {\r\n\r\n  sound.load();\r\n  \r\n  const app = new Application({ \r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n\r\n  const ticker = new Ticker();\r\n\r\n  const group = new Container();\r\n  var paddle: Paddle;\r\n  var bricks = new Container();\r\n  var ball: Ball;\r\n  var sides = new Container();\r\n\r\n  // for debugging\r\n  var extra = new Container();\r\n\r\n  let canMovePaddle = !settings.paddle.transition;\r\n\r\n  const setup = () => {\r\n    const { width, height } = app.view;\r\n\r\n    particles.setup(app, group);\r\n    \r\n    // background\r\n    const bg = new Graphics()\r\n      .beginFill(0x000000)\r\n      .drawRect(0, 0, width, height)\r\n      .endFill();\r\n    app.stage.addChild(bg);\r\n\r\n    //sides\r\n    setupSides(app, sides, 100, 0x11cccc);\r\n    app.stage.addChild(sides);\r\n\r\n    // setup bricks\r\n    bricks = setupBricks(app, bricks, 0xcc11cc, width * .8, height * .35, 8, 6, 20);\r\n    bricks.position.set(width * .1, width * .1);\r\n    group.addChild(bricks);\r\n\r\n    // setup ball\r\n    Ball.createTexture(app, 0xccf111, 0xffffff, 20);\r\n    ball = new Ball();\r\n    \r\n    // setup paddle\r\n    Paddle.createTexture(app, 0xcc1111, width * .15, 40);\r\n    paddle = new Paddle();\r\n    paddle.position.set(width * .5, height - 60);\r\n    paddle.addBall(ball);\r\n    group.addChild(paddle);\r\n    if(settings.paddle.transition){\r\n      setTransition(paddle, {\r\n        frames: [\r\n          {\r\n            position: new Vector(paddle.position).add(0, 300),\r\n            scale: new Vector(.3, .3),\r\n          },\r\n          {\r\n            position: new Vector(paddle.position),\r\n            scale: new Vector(1, 1),\r\n          },\r\n        ],\r\n        duration: 500,\r\n        delay: 400,\r\n        easingFunction: Ease.out(3),\r\n        onFinish: () => {\r\n          canMovePaddle = true;\r\n          if(settings.test.autoStart) {\r\n            handleMouseClick(null as any);\r\n            paddle.position.y = -100;\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // add group to stage\r\n    app.stage.addChild(group);\r\n\r\n    // add extra to stage\r\n    app.stage.addChild(extra);\r\n\r\n    app.stage.interactive = true;\r\n    app.stage.on('mousemove', handleMouseMove);\r\n    app.stage.on('mousedown', handleMouseClick);\r\n    app.renderer.plugins.interaction.cursorStyles.default = 'none';\r\n\r\n    ticker.add(process);\r\n    ticker.start();\r\n  }\r\n\r\n  const process = () => {\r\n    paddle.process();\r\n    if(!ball.inStage) return;\r\n    particles.update();\r\n\r\n    const touch = isTouching(paddle, ball, 1);\r\n    const bounce = touch && ball.bounce(touch, paddle);\r\n\r\n    if(bounce) {\r\n      wobbleBricks();\r\n      sound.paddle();\r\n    }\r\n\r\n    ball.process(paddle, touch, bounce);\r\n\r\n    bricks.children.some(brick => {\r\n      if(brick instanceof Brick) brick.process();\r\n      const touch = isTouching(brick, ball);\r\n      if(touch){\r\n        ball.bounce(touch);\r\n        bricks.removeChild(brick);\r\n        wobbleBricks(true);\r\n        sound.brick();\r\n      }\r\n      return touch;\r\n    });\r\n\r\n    sides.children.forEach(side => {\r\n      const touch = isTouching(side, ball, 1);\r\n      if(touch) {\r\n        ball.bounce(touch, side);\r\n        wobbleBricks();\r\n        sound.wall();\r\n      }\r\n    });\r\n  }\r\n\r\n  const wobbleBricks = (touchedBrick?: boolean) => {\r\n    if(!ball.inStage) return;\r\n    particles.hit(ball.position)\r\n\r\n    const minDist = Brick.tx.width;\r\n    const maxDist = app.view.width/2;\r\n    const point = new Vector(ball.position);\r\n    bricks.children.forEach(brick => {\r\n      const dist = !touchedBrick ? 0 : point.dist(new Vector(brick.position));\r\n      const delay = !touchedBrick ? Math.random() * 70 : pI.map(dist, minDist, maxDist, 0, 200, true);\r\n      const color = !touchedBrick ? Math.random() : dist/maxDist;\r\n\r\n      if(settings.brick.color && brick instanceof Brick) brick.changeTexture(color);\r\n\r\n      if(settings.brick.wobble) setTransition(brick, {\r\n        frames: [\r\n          {\r\n            scale: new Vector(1, 1),\r\n            rotation: 0\r\n          },\r\n          {\r\n            scale: new Vector(1.1, 1.1),\r\n            rotation: Math.random() * .2 - .1\r\n          },\r\n          {\r\n            scale: new Vector(0.9, 0.9),\r\n            rotation: Math.random() * .2 - .1\r\n          },\r\n          {\r\n            scale: new Vector(1, 1),\r\n            rotation: 0\r\n          }\r\n        ],\r\n        duration: 200,\r\n        delay,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleMouseMove = (event: interaction.InteractionEvent) => {\r\n    if(canMovePaddle) paddle.move(event.data.global.x);\r\n  }\r\n\r\n  const handleMouseClick = (event: interaction.InteractionEvent) => {\r\n    if(ball.inStage) return;\r\n    ball.getGlobalPosition().copyTo(ball.position);\r\n    app.stage.addChild(ball);\r\n    ball.release();\r\n  }\r\n\r\n  if(settings.test.angles){\r\n    setupAngleTest(app);\r\n  } else if(settings.test.transition){\r\n    setupTransitionTest(app);\r\n  } else {\r\n    setup();\r\n  }\r\n\r\n  return app;\r\n}","import { Brick } from \"../objects/Brick\";\r\nimport { Application, Graphics, TextStyle, Text, interaction } from \"pixi.js\";\r\nimport { Ball } from \"../objects/Ball\";\r\nimport { Vector } from \"./Vector\";\r\nimport { pI } from \"./pI\";\r\nimport { getTouchingSidesInfo } from \"../isTouching\";\r\n\r\nexport const setupAngleTest = (app: Application) => {\r\n  const { width, height } = app.view;\r\n  \r\n  Brick.createTexture(app, 0xcc11cc, 200, 20);\r\n  const objA = new Brick(width * .5, height * .5);\r\n  app.stage.addChild(objA);\r\n\r\n  Ball.createTexture(app, 0xccf111, 0xccf111, 20);\r\n  const objB = new Ball();\r\n  app.stage.addChild(objB);\r\n\r\n  app.stage.interactive = true;\r\n  const gr = new Graphics();\r\n  const style = new TextStyle({\r\n    fontSize: 14,\r\n    fill: '#ffffff',\r\n  });\r\n  app.stage.addChild(gr);\r\n  \r\n  app.stage.on('mousemove', (ev: interaction.InteractionEvent) => {\r\n    objB.position.copyFrom(ev.data.global);\r\n\r\n    const boxA = objA.getBounds();\r\n    const boxB = objB.getBounds();\r\n\r\n    const { angle, leftTopAng, rightTopAng, leftBottomAng, rightBottomAng, vectorA, sides } = getTouchingSidesInfo(boxA, boxB, 1);\r\n\r\n    const size = 200;\r\n    const leftTop = Vector.fromAngle(leftTopAng).mult(size).add(vectorA);\r\n    const rightTop = Vector.fromAngle(rightTopAng).mult(size).add(vectorA);\r\n    const leftBottom = Vector.fromAngle(leftBottomAng).mult(size).add(vectorA);\r\n    const rightBottom = Vector.fromAngle(rightBottomAng).mult(size).add(vectorA);\r\n\r\n    // @ts-ignore\r\n    let side = Object.keys(sides).find(k => sides[k]);\r\n\r\n    gr.removeChildren();\r\n    gr.clear()\r\n      .lineStyle(2, 0xffffff)\r\n      .moveTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y)\r\n      .lineTo(objB.x, objB.y)\r\n      .moveTo(leftTop.x, leftTop.y)\r\n      .lineTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y)\r\n      .moveTo(rightTop.x, rightTop.y)\r\n      .lineTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y)\r\n      .moveTo(leftBottom.x, leftBottom.y)\r\n      .lineTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y)\r\n      .moveTo(rightBottom.x, rightBottom.y)\r\n      .lineTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y);\r\n\r\n    const tx = new Text(Math.round(pI.degrees(angle)) + ' ' + side, style);\r\n    tx.position.x = objB.position.x + 15;\r\n    tx.position.y = objB.position.y + 15;\r\n    gr.addChild(tx);\r\n\r\n\r\n  });\r\n}","import { Application } from \"pixi.js\";\r\nimport { Ball } from \"../objects/Ball\";\r\nimport { setTransition } from \"./setTransition\";\r\nimport { Vector } from \"./Vector\";\r\nimport { Ease } from \"./Ease\";\r\n\r\nexport const setupTransitionTest = (app: Application) => {\r\n  const { width, height } = app.view;\r\n\r\n  Ball.createTexture(app, 0xccf111, 0xccf111, 20);\r\n  const ball = new Ball();\r\n  ball.position.set(width * .5, height * .5);\r\n  app.stage.addChild(ball);\r\n\r\n  const duration = 800;\r\n  const initialScale = new Vector(1, 1.5);\r\n  const transition = () => {\r\n    console.clear();\r\n    setTransition(ball, {\r\n      frames: [\r\n        {\r\n          scale: initialScale,\r\n        },\r\n        {\r\n          scale: new Vector(1.4, .7),\r\n        },\r\n        {\r\n          scale: new Vector(1, 1.3),\r\n        },\r\n        {\r\n          scale: new Vector(1.2, .8),\r\n        },\r\n        {\r\n          scale: new Vector(1, 1),\r\n        },\r\n      ],\r\n      duration: duration,\r\n      autoStart: true,\r\n      easingFunction: Ease.inOut(1.5),\r\n    });\r\n  };\r\n  transition();\r\n  setInterval(transition, duration + 500);\r\n}","import { Container, Graphics, Application } from \"pixi.js\";\r\n\r\nexport const setupSides = (app: Application, sides: Container, size: number, color: number) => {\r\n  const { width, height } = app.view;\r\n  var top = new Graphics()\r\n    .beginFill(color)\r\n    .drawRect(-size, -size, width + size, size)\r\n    .endFill();\r\n  var right = new Graphics()\r\n    .beginFill(color)\r\n    .drawRect(width, -size, size, height + size)\r\n    .endFill();\r\n  var bottom = new Graphics()\r\n    .beginFill(color)\r\n    .drawRect(-size, height, width + size, size)\r\n    .endFill();\r\n  var left = new Graphics()\r\n    .beginFill(color)\r\n    .drawRect(-size, -size, size, height + size)\r\n    .endFill();\r\n  sides.addChild(top);\r\n  sides.addChild(right);\r\n  sides.addChild(bottom);\r\n  sides.addChild(left);\r\n}","import * as React from 'react';\r\nimport { initGame } from './main';\r\nimport { Application } from 'pixi.js';\r\n\r\ninterface GameProps {}\r\n\r\nconst Game: React.FC<GameProps> = () => {\r\n\r\n  const divRef = React.useRef(null as null|HTMLDivElement);\r\n  const gameRef = React.useRef(null as null|Application);\r\n\r\n  React.useEffect(() => {\r\n    gameRef.current = initGame();\r\n    divRef.current!.append(gameRef.current.view);\r\n  }, []);\r\n  \r\n  return (<div ref={divRef}></div>);\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport Game from '../../game/Game';\n\nconst App = () => {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}