{"version":3,"sources":["game/utils/pI.ts","game/utils/settings.ts","game/objects/Paddle.ts","game/utils/Vector.ts","game/utils/setInterpolation.ts","game/utils/setTransition.ts","game/utils/Ease.ts","game/objects/Ball.ts","game/objects/Brick.ts","game/utils/setupBricks.ts","game/utils/sound.ts","game/utils/particles.ts","game/isTouching.ts","game/utils/getBoxVertices.ts","game/objects/Side.ts","game/utils/getLinesIntersection.ts","game/utils/setupSides.ts","game/utils/interpolateLine.ts","game/utils/breakBrick.ts","game/main.ts","game/tests/setupAngleTest.ts","game/tests/setupTransitionTest.ts","game/tests/setupBreakBrickTest.ts","game/tests/setupInterpolationTest.ts","game/tests/setupLightningsTest.ts","game/tests/setupCurveTest.ts","game/Game.tsx","components/App/App.tsx","index.tsx"],"names":["pI","p5","settings","transition","wobble","sound","color","break","lightning","squishy","scale","rotation","bounceColor","curve","music","interpolation","angles","brickBreak","lightnings","autoStart","Paddle","box","tx","getBounds","wH","width","hH","height","pivot","set","app","gr","Graphics","beginFill","drawRect","endFill","this","renderer","generateTexture","x","mov","Math","abs","map","y","ball","position","addChild","Sprite","Vector","z","p","a","b","c","length","n","d","angle","v1","v2","target","p5Vector","setInterpolation","options","duration","delay","onFinish","onChange","autoInit","easingFunction","t","frames","initialTime","value","resIsNum","ticker","Ticker","started","start","Date","now","add","process","outerStep","destroy","index","findIndex","time","frameA","frameB","innerStep","res","result","nA","valuesB","calc","src","setted","i","filter","slice","curr","prev","v","forEach","aIndex","bIndex","timeDiff","indexDiff","timeStep","Array","from","_","modIndex","modTime","calculateStepTimes","setTimeout","setTransition","obj","initCalled","doPosition","every","s","doScale","doRotation","doAlpha","alpha","doNothing","inter","interFrames","setValues","values","posX","posY","scaleX","scaleY","init","Ease","in","inOut","Ball","inStage","vel","logAngles","lastTouchedObj","lastTouchedTime","touchTransform","colorBounce","size","drawCircle","clear","txBounce","touch","top","right","bottom","left","setWobble","setSquishy","texture","arc","PI","r","random","rotate","paddle","bounced","maxAngMod","maxDiff","rot","console","log","round","degrees","heading","maxAng","minAng","ang","bounceTextureDuration","array","squishyBezier","initialScale","wobbleEase","Bezier","Brick","lastTxChangedTime","txDists","chroma","colors","col","num","floor","hitTextureDuration","wall","bricks","emitter","isTouching","objA","objB","type","renderable","boxA","getBoundsHelper","boxB","isTouchingBox","getTouchingSidesInfo","sides","vectorA","fromBox","vectorB","sub","mod","leftTop","rightTop","leftTopAng","rightTopAng","leftBottomAng","rightBottomAng","bounds","prevScale","prevRotation","copyFrom","updateTransform","getBoxVertices","lt","rt","rb","lb","Side","_color","lineStyle","cacheAsBitmap","touchPoint","vA","vB","copy","touchLine","point","axis","axLen","mag","normalize","workingA","workingB","rightang","mappedA","dot","mappedB","dir","inters","mult","ty","intersecting","getLinesIntersection","val","cp","moveTo","quadraticCurveTo","skipUpdate","rect","setupSides","view","lastBrickHitTime","lastBrickHitIndex","Howl","loop","volume","play","elapsed","cont","particles","updateSpawnPos","resetPositionTracking","emit","diff","update","interpolateLine","vectors","line","enter","exit","totalLength","reduce","acc","totalDuration","min","max","current","enterT","exitT","enterVal","exitVal","enterTip","getCurrentFromStep","exitTip","lineVectors","pos","pt","step","maxLength","prevLength","innerVal","next","lerp","breakBrick","vertices","getPointsByTouch","pointA","pointB","newPoints","random2D","fracture","sideA","sideB","fromLR","fromTB","reverse","push","grA","globalA","getGlobalPosition","closePath","rA","movBg","stage","removeChild","grB","globalB","rB","extra","vert","initGame","Application","window","innerWidth","innerHeight","group","Container","canMovePaddle","bounce","wobbleBricks","move","children","some","brick","side","curveByTouch","touchedBrick","minDist","maxDist","dist","changeTexture","handleMouseMove","event","data","global","handleMouseClick","copyTo","release","createTexture","interactive","style","TextStyle","fontSize","fill","on","ev","fromAngle","leftBottom","rightBottom","Object","keys","find","k","removeChildren","lineTo","Text","setupAngleTest","setInterval","setupTransitionTest","info","document","createElement","margin","padding","body","appendChild","innerText","setupBreakBrickTest","div","backgroundColor","setupInterpolationTest","points","arr","len","disp","setupLightningsTest","setupCurveTest","bg","groupW","groupH","numX","numY","bricksW","bricksH","easing","setupBricks","addBall","out","plugins","interaction","cursorStyles","default","setup","Game","divRef","React","gameRef","append","ref","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6604a78a.chunk.js","sourcesContent":["import p5 from \"p5\";\r\n\r\nexport const pI = new p5(() => null);","export const settings = {\r\n  brick: {\r\n    transition: true,\r\n    wobble: true,\r\n    sound: false,\r\n    color: true,\r\n    break: true,\r\n    lightning: true,\r\n  },\r\n  paddle: {\r\n    transition: true,\r\n    squishy: true,\r\n    sound: false,\r\n  },\r\n  ball: {\r\n    squishy: true,\r\n    wobble: true,\r\n    scale: true,\r\n    rotation: true,\r\n    bounceColor: true,\r\n  },\r\n  wall: {\r\n    sound: false,\r\n    curve: true,\r\n  },\r\n  general: {\r\n    music: false,\r\n  },\r\n  test: {\r\n    interpolation: false,\r\n    transition: false,\r\n    angles: false,\r\n    brickBreak: false,\r\n    lightnings: false,\r\n    curve: false,\r\n    autoStart: false,\r\n  }\r\n}","import { Application, Graphics, Sprite, Texture } from 'pixi.js';\r\nimport { Ball } from './Ball';\r\nimport { pI } from '../utils/pI';\r\nimport { settings } from '../utils/settings';\r\n\r\nexport class Paddle extends Sprite {\r\n\r\n  static tx: Texture;\r\n\r\n  static createTexture(app: Application, color: number, width: number, height: number) {\r\n    const gr = new Graphics();\r\n    gr.beginFill(color)\r\n      .drawRect(0, 0, width, height)\r\n      .endFill();\r\n    this.tx = app.renderer.generateTexture(gr, 1, 1);\r\n  }\r\n\r\n  constructor() {\r\n    super(Paddle.tx);\r\n    const box = this.getBounds();\r\n    const wH = box.width * .5;\r\n    const hH = box.height * .5;\r\n    this.pivot.set(wH, hH);\r\n  }\r\n\r\n  move(x: number) {\r\n    if(settings.paddle.squishy){\r\n      const mov = Math.abs(this.x - x);\r\n      const max = 60;\r\n      this.scale.x = pI.map(mov, 0, max, 1, 1.6, true);\r\n      this.scale.y = pI.map(mov, 0, max, 1, 0.6, true);\r\n    }\r\n    this.x = x;\r\n  }\r\n\r\n  process() {\r\n    this.scale.set(1, 1);\r\n  }\r\n\r\n  addBall(ball: Ball) {\r\n    ball.position.set(this.getBounds().width * .5, ball.getBounds().height * -.5);\r\n    this.addChild(ball);\r\n  }\r\n}","import { Vector as p5Vector } from \"p5\";\r\nimport { Rectangle, IPoint } from \"pixi.js\";\r\n\r\nexport class Vector extends p5Vector implements IPoint {\r\n\r\n  constructor(x?: number | { x: number, y: number }, y?: number, z?:number) {\r\n    if(typeof x === 'object'){\r\n      y = x.y;\r\n      x = x.x;\r\n    }\r\n    // @ts-ignore\r\n    super(x, y, z);\r\n  }\r\n\r\n  static fromBox(box: Rectangle) {\r\n    return new Vector(box.x + box.width * .5, box.y + box.height * .5);\r\n  }\r\n\r\n  copyFrom(p: IPoint) {\r\n    this.x = p.x;\r\n    this.y = p.y;\r\n    return this;\r\n  }\r\n\r\n  copyTo(p: IPoint) {\r\n    p.x = this.x;\r\n    p.y = this.y;\r\n    return p;\r\n  }\r\n\r\n  equals(a?: any, b?: any, c?: any) {\r\n    if(\r\n      a instanceof Vector || // vector instance\r\n      (typeof a === 'number' && typeof b === 'number') ||\r\n      (a.length > 0 && a[0] instanceof Vector) // array?\r\n    ){\r\n      return super.equals(a, b, c);\r\n    }\r\n    if(a){\r\n      return this.x === a.x && this.y === a.y;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  toArray() {\r\n    return [this.x, this.y];\r\n  }\r\n\r\n  /**\r\n   * p5.Vector definitions\r\n   */\r\n  static random2D() {\r\n    return new Vector(super.random2D());\r\n  }\r\n  static fromAngle(angle: number, length?: number) {\r\n    return new Vector(super.fromAngle(angle, length));\r\n  }\r\n  static sub(v1: Vector, v2: Vector): Vector;\r\n  static sub(v1: Vector, v2: Vector, target?: Vector) {\r\n    if(typeof target !== 'undefined'){\r\n      return super.sub(v1, v2, target);\r\n    }\r\n    return new Vector(super.sub(v1, v2));\r\n  }\r\n  add(x: number, y?: number | undefined, z?: number | undefined): Vector;\r\n  add(value: Vector | number[]): Vector;\r\n  add(...params: any[]): Vector {\r\n    return super.add(params[0], params[1], params[2]) as Vector;\r\n  }\r\n  mult(n: number): Vector{\r\n    return super.mult(n) as Vector;\r\n  }\r\n  lerp(x: Vector, amt: number): Vector;\r\n  lerp(x: number, y: number, z: number, amt: number): Vector;\r\n  lerp(a: any, b: any, c?: any, d?: any){\r\n    if(a instanceof Vector) return super.lerp(a, b);\r\n    return super.lerp(a, b, c, d);\r\n  }\r\n  copy(): Vector{\r\n    return new Vector(this);\r\n  }\r\n  sub(x: number, y?: number | undefined, z?: number | undefined): Vector;\r\n  sub(value: Vector | number[]): Vector;\r\n  sub(...params: any[]): Vector {\r\n    return super.sub(params[0], params[1], params[2]) as Vector;\r\n  }\r\n}\r\n","import { Ticker } from \"pixi.js\";\r\nimport { pI } from \"./pI\"; \r\n\r\nexport interface InterpolationOptions {\r\n  frames?: {\r\n    time?: number;\r\n    value: number|number[];\r\n  }[] | number[];\r\n  duration: number;\r\n  onChange: (value: number|number[]) => void;\r\n  delay?: number;\r\n  autoStart?: boolean;\r\n  autoInit?: boolean;\r\n  easingFunction?: (t: number) => number;\r\n  onFinish?: () => void;\r\n}\r\n\r\nexport interface Interpolation {\r\n  start: () => void;\r\n}\r\n\r\nexport const setInterpolation = (options: InterpolationOptions): Interpolation => {\r\n\r\n  const { duration, delay, onFinish, onChange, autoStart = true, autoInit = true } = options;\r\n  const easingFunction = options.easingFunction || ((t) => t);\r\n\r\n  options.frames = options.frames || [ 0, 1 ];\r\n  const frames: { time:number, value: number }[] = typeof options.frames[0] === 'number' \r\n    ? (options.frames as number[]).map((n: number) => ({ value: n }))\r\n    : options.frames as any[];\r\n\r\n  const resIsNum = typeof frames[0].value === 'number';\r\n\r\n  const ticker = new Ticker();\r\n  let initialTime: number;\r\n  \r\n  // flags\r\n  let started = false;\r\n\r\n  // initial processing\r\n  const initialProcessing = () => {\r\n    // calculate time for steps\r\n    calculateStepTimes();\r\n\r\n    if(autoInit) onChange(frames[0].value);\r\n\r\n    // start if has delay or autoStart\r\n    if((delay && delay > 0 && autoStart === true) || autoStart) {\r\n      setTimeout(() => start(), delay || 0);\r\n    }\r\n  }\r\n\r\n  // start transition\r\n  const start = () => {\r\n    if(started) return;\r\n    initialTime = Date.now();\r\n    ticker.add(process);\r\n    ticker.start();\r\n    started = true;\r\n  }\r\n\r\n  // ticker process\r\n  const process = () => {\r\n    // calculate main step (beginning to end of transition)\r\n    const now = Date.now();\r\n    const diff = now - initialTime;\r\n    const outerStep = diff / duration;\r\n\r\n    // set end position\r\n    if(outerStep >= 1){\r\n      onChange(frames[frames.length - 1].value);\r\n      ticker.destroy();\r\n      if(typeof onFinish === 'function') onFinish();\r\n      return;\r\n    }\r\n\r\n    // get next frame index\r\n    const index = frames.findIndex(({ time }) => (outerStep < time!));\r\n    // get frames for current transition\r\n    const frameA = frames[index - 1];\r\n    const frameB = frames[index];\r\n    // calculate inner step (number between 0 and 1, inside the frames time range)\r\n    const innerStep = pI.map(outerStep, frameA.time!, frameB.time!, 0, 1, true);\r\n    // calculate modifier (y position for x = innerStep)\r\n    const res = easingFunction(innerStep);\r\n    // call onChange\r\n    const result = ((resIsNum ? [frameA.value] : frameA.value) as number[])\r\n      .map((nA, index) => {\r\n        if(typeof nA === 'undefined') return undefined;\r\n        const valuesB = (resIsNum ? [frameB.value] : frameB.value) as number[];\r\n        return calc(res, nA, valuesB[index] || 0);\r\n      });\r\n    onChange((resIsNum ? result[0] : result) as number|number[]);\r\n  }\r\n\r\n  // map src to range\r\n  const calc = (src: number, a: number, b: number) => a + (b - a) * src;\r\n\r\n  const calculateStepTimes = () => {\r\n    // set first and last frames with 0 and 1\r\n    frames[0].time = 0;\r\n    frames[frames.length - 1].time = 1;\r\n\r\n    // only makes sense if there's more than 2\r\n    if(frames.length === 2) return;\r\n\r\n    // get frames with time set\r\n    const setted = frames // map to index or -1\r\n      .map(({ time: t }, i) => (typeof t === 'number' && (t >= 0 || t <= 1) ? i : -1))\r\n      .filter(n => n >= 0); // remove -1\r\n\r\n    setted.slice(1) // remove first (0)\r\n      .map((curr, i) => {\r\n        const prev = setted[i];\r\n        // only return group if is not consecutive\r\n        if(prev + 1 < curr) return [prev,curr];\r\n        return null;\r\n      })\r\n      .filter(v => v) // remove emtpy values\r\n      .forEach(([aIndex, bIndex]: any) => {\r\n        //console.log(aIndex, bIndex);\r\n        const frameA = frames[aIndex];\r\n        let frameB = frames[bIndex];\r\n        // to prevent range errors\r\n        if(frameA.time! > frameB.time!) frameB = frameA;\r\n        // dime difference in range\r\n        const timeDiff = frameB.time! - frameA.time!;\r\n        // diff between indexes (spaces between)\r\n        const indexDiff = bIndex - aIndex;\r\n        // time division\r\n        const timeStep = timeDiff / indexDiff;\r\n        // loop spaces to fill (indexDiff - 1)\r\n        Array.from({ length: indexDiff - 1 })\r\n          .forEach((_, i) => {\r\n            // empty index\r\n            const modIndex = aIndex + i + 1;\r\n            // beginning + step\r\n            const modTime = frameA.time! + timeStep * (i + 1);\r\n            frames[modIndex].time = modTime;\r\n          });\r\n      });\r\n  }\r\n\r\n  //\r\n  initialProcessing();\r\n\r\n  return { start };\r\n\r\n}","import { DisplayObject } from \"pixi.js\";\r\nimport { Vector } from \"p5\";\r\nimport { setInterpolation, Interpolation } from \"./setInterpolation\";\r\n\r\ninterface Transformation {\r\n  time?: number;\r\n  position?: Vector;\r\n  scale?: Vector;\r\n  rotation?: number;\r\n  alpha?: number;\r\n}\r\n\r\ninterface Options {\r\n  frames: Transformation[];\r\n  duration: number;\r\n  delay?: number;\r\n  autoStart?: boolean;\r\n  easingFunction?: (t: number) => number;\r\n  onFinish?: () => void;\r\n}\r\n\r\nexport const setTransition = (obj: DisplayObject, options: Options) => {\r\n\r\n  const { frames } = options;\r\n  \r\n  // flags\r\n  let initCalled = false;\r\n  const doPosition = frames.every(s => s.position);\r\n  const doScale    = frames.every(s => s.scale);\r\n  const doRotation = frames.every(s => typeof s.rotation === 'number');\r\n  const doAlpha    = frames.every(s => typeof s.alpha === 'number');\r\n  const doNothing  = (!doPosition && !doScale && !doRotation && !doAlpha) || frames.length < 2;\r\n\r\n  let inter: null|Interpolation = null;\r\n\r\n  // transform input frames to interpolation value array\r\n  const interFrames = frames\r\n    .map(({ time, position = {} as any, scale = {} as any, rotation, alpha }) => ({\r\n      time,\r\n      value: [ position.x, position.y, scale.x, scale.y, rotation, alpha ],\r\n    }));\r\n\r\n  // initial processing\r\n  const initialProcessing = () => {\r\n    if(doNothing) return;\r\n    inter = setInterpolation({\r\n      ...options,\r\n      frames: interFrames,\r\n      onChange: setValues,\r\n    });\r\n  }\r\n\r\n  // start transition\r\n  const start = () => {\r\n    if(doNothing) return;\r\n    if(!initCalled) setValues(interFrames[0].value)\r\n    inter!.start();\r\n  }\r\n\r\n  // set initial values\r\n  const init = () => {\r\n    if(doNothing) return;\r\n    setValues(interFrames[0].value);\r\n    initCalled = true;\r\n  }\r\n\r\n  const setValues = (values: number|number[]) => {\r\n    const [ posX, posY, scaleX, scaleY, rotation, alpha ] = values as number[];\r\n    if(doPosition){\r\n      obj.position.x = posX;\r\n      obj.position.y = posY;\r\n    }\r\n    if(doScale){\r\n      obj.scale.x = scaleX;\r\n      obj.scale.y = scaleY;\r\n    }\r\n    if(doRotation) obj.rotation = rotation;\r\n    if(doAlpha) obj.alpha = alpha;\r\n  }\r\n  \r\n  //\r\n  initialProcessing();\r\n\r\n  return { init, start };\r\n\r\n}","// https://gist.github.com/yukulele/2234731c0445dd5b1f4673889bf3330c\r\n\r\nexport class Ease {\r\n  static in(p = 1) {\r\n    return (t: number) => t ** p;\r\n  }\r\n  static out(p = 1) {\r\n    return (t: number) => 1 - Ease.in(p)(1 - t);\r\n  }\r\n  static inOut(p = 1) {\r\n    return (t: number): number => {\r\n      if (t <= 0.5) {\r\n        return Ease.in(p)(t * 2) / 2\r\n      }\r\n      return 1 - Ease.inOut(p)(1 - t);\r\n    }\r\n  }\r\n}","import { Sprite, Graphics, Application, Texture, DisplayObject } from \"pixi.js\";\r\nimport { isTouchingReturnType, withTouchTransform } from \"../isTouching\";\r\nimport { Paddle } from \"./Paddle\";\r\nimport { Vector } from \"../utils/Vector\";\r\nimport { pI } from \"../utils/pI\";\r\nimport { setTransition } from \"../utils/setTransition\";\r\nimport Bezier from 'bezier-easing';\r\nimport { settings } from \"../utils/settings\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\nexport class Ball extends Sprite implements withTouchTransform {\r\n\r\n  static tx: Texture;\r\n  static txBounce: Texture;\r\n  static squishyBezier = Bezier(0,1.54,.37,.74);\r\n  static wobbleEase = Ease.inOut(1.5);\r\n  static bounceTextureDuration = 100;\r\n\r\n  inStage: boolean;\r\n  vel: Vector;\r\n\r\n  logAngles = false;\r\n\r\n  lastTouchedObj: DisplayObject|null = null;\r\n  lastTouchedTime: number = 0;\r\n\r\n  touchTransform = {\r\n    scale: new Vector(1, 1),\r\n    rotation: 0,\r\n  }\r\n\r\n  static createTexture(app: Application, color: number, colorBounce: number, size: number) {\r\n    const gr = new Graphics();\r\n    gr.beginFill(color)\r\n      .drawCircle(0, 0, size)\r\n      .endFill();\r\n    // regular\r\n    this.tx = app.renderer.generateTexture(gr, 1, 1);\r\n    gr.clear()\r\n      .beginFill(colorBounce)\r\n      .drawCircle(0, 0, size)\r\n      .endFill();\r\n    // bounce\r\n    this.txBounce = app.renderer.generateTexture(gr, 1, 1);\r\n  }\r\n\r\n  constructor() {\r\n    super(Ball.tx);\r\n    const box = this.getBounds();\r\n    const wH = box.width * .5;\r\n    const hH = box.height * .5;\r\n    this.pivot.set(wH, hH);\r\n    this.inStage = false;\r\n    this.vel = new Vector();\r\n  }\r\n\r\n  bounce(touch: isTouchingReturnType, obj: DisplayObject|null = null) {\r\n    if(!this.inStage) return false;\r\n    if(obj && this.lastTouchedObj === obj) return false;\r\n    this.lastTouchedObj = obj;\r\n    const { top, right, bottom, left } = touch;\r\n    if(top || bottom) this.vel.y *= -1;\r\n    else if(left || right) this.vel.x *= -1;\r\n    // wobble (plus squishy if enabled)\r\n    if(settings.ball.wobble) this.setWobble(settings.ball.squishy);\r\n    // only squishy\r\n    else if(settings.ball.squishy) this.setSquishy();\r\n    if(settings.ball.bounceColor) {\r\n      this.lastTouchedTime = Date.now();\r\n      this.texture = Ball.txBounce;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  release() {\r\n    this.inStage = true;\r\n    this.vel = new Vector(0, -10);\r\n    const arc = Math.PI * .3;\r\n    const r = Math.random() * arc - arc * .5;\r\n    this.vel.rotate(r);\r\n  }\r\n\r\n  process(paddle: Paddle, touch: isTouchingReturnType|false, bounced: boolean) {\r\n    if(!this.inStage) return;\r\n\r\n    if(touch && touch.top && bounced){\r\n      const maxAngMod = Math.PI * .1;\r\n      const maxDiff = paddle.getBounds(true).width * .5 + this.getBounds(true).width * .5;\r\n      const diff = this.position.x - paddle.position.x;\r\n      const diffNormal = diff / maxDiff;\r\n      const rot = maxAngMod * diffNormal;\r\n\r\n      if(this.logAngles) console.log('\\n\\nincoming: ', Math.round(pI.degrees(this.vel.heading())));\r\n      if(this.logAngles) console.log('inverted: ', Math.round(pI.degrees(this.vel.heading())));\r\n      this.vel.rotate(rot);\r\n      if(this.logAngles) console.log('rotated: ', Math.round(rot * 180/Math.PI), Math.round(pI.degrees(this.vel.heading())));\r\n\r\n      const maxAngMult = -.18;\r\n      const maxAng = Math.PI * maxAngMult;\r\n      const minAng = Math.PI * -(1 + maxAngMult);\r\n      const ang = this.vel.heading();\r\n      if(ang > maxAng) this.vel.rotate((ang - maxAng) * -1);\r\n      if(ang < minAng) this.vel.rotate((ang - minAng) * -1);\r\n\r\n      if(this.logAngles) console.log('final: ', Math.round(pI.degrees(this.vel.heading())), Math.round(minAng * 180/Math.PI), Math.round(maxAng * 180/Math.PI));\r\n    }\r\n  }\r\n\r\n  move() {\r\n    if(!this.inStage) return;\r\n\r\n    if(settings.ball.scale) this.scale.set(1.5, 1);\r\n    if(settings.ball.rotation) this.rotation = this.vel.heading();\r\n\r\n    if(this.texture === Ball.txBounce){\r\n      const diff = Date.now() - this.lastTouchedTime;\r\n      if(diff > Ball.bounceTextureDuration) this.texture = Ball.tx;\r\n    }\r\n\r\n    this.position.set(...new Vector(this.position).add(this.vel).array());\r\n  }\r\n\r\n  setSquishy() {\r\n    setTransition(this, {\r\n      frames: [\r\n        { scale: new Vector(1.5, 1.5) },\r\n        { scale: new Vector(this.scale) },\r\n      ],\r\n      duration: 50,\r\n      autoStart: true,\r\n      easingFunction: Ball.squishyBezier,\r\n    });\r\n  }\r\n\r\n  setWobble(squishy: boolean) {\r\n    const initialScale = new Vector(this.scale);\r\n    setTransition(this, {\r\n      frames: [\r\n        { scale: squishy ? new Vector(1.5, 1.5) : initialScale },\r\n        { scale: new Vector(1.4, .7) },\r\n        { scale: new Vector(1, 1.3) },\r\n        { scale: new Vector(1.2, .8) },\r\n        { scale: initialScale },\r\n      ],\r\n      duration: 800,\r\n      autoStart: true,\r\n      easingFunction: Ball.wobbleEase,\r\n    });\r\n  }\r\n}","import { Sprite, Texture, Graphics, Application } from \"pixi.js\";\r\nimport chroma from 'chroma-js';\r\n\r\nexport class Brick extends Sprite {\r\n\r\n  static tx: Texture;\r\n  static txDists: Texture[];\r\n  static hitTextureDuration = 200;\r\n\r\n  lastTxChangedTime = 0;\r\n\r\n  static createTexture(app: Application, color: number, width: number, height: number) {\r\n    const gr = new Graphics();\r\n    gr.beginFill(color)\r\n      .drawRect(0, 0, width, height)\r\n      .endFill();\r\n    this.tx = app.renderer.generateTexture(gr, 1, 1);\r\n\r\n    this.txDists = chroma\r\n      .scale(['blue', 'white'])\r\n      .colors(20)\r\n      .map((col) => {\r\n        gr.clear()\r\n          .beginFill(chroma(col).num())\r\n          .drawRect(0, 0, width, height)\r\n          .endFill();\r\n        return app.renderer.generateTexture(gr, 1, 1);\r\n      });\r\n  }\r\n\r\n  constructor(x: number, y: number) {\r\n    super(Brick.tx);\r\n    const box = this.getBounds();\r\n    const wH = box.width * .5;\r\n    const hH = box.height * .5;\r\n    this.pivot.set(wH, hH);\r\n    this.position.set(x, y);\r\n  }\r\n\r\n  changeTexture(n: number) {\r\n    if(n < 0) n = 0;\r\n    if(n > 1) n = 1;\r\n    const index = Math.floor(n * (Brick.txDists.length - 1));\r\n    this.texture = Brick.txDists[index];\r\n    this.lastTxChangedTime = Date.now();\r\n  }\r\n\r\n  process() {\r\n    if(this.texture !== Brick.tx){\r\n      const diff = Date.now() - this.lastTxChangedTime;\r\n      if(diff > Brick.hitTextureDuration) this.texture = Brick.tx;\r\n    }\r\n  }\r\n  \r\n}","import { Application, Container } from \"pixi.js\";\r\nimport { Brick } from \"../objects/Brick\";\r\nimport { setTransition } from \"./setTransition\";\r\nimport { Vector } from \"./Vector\";\r\nimport Bezier from 'bezier-easing';\r\nimport { settings } from \"./settings\";\r\n\r\nexport const setupBricks = (app: Application, bricks: Container, color: number, groupW: number, groupH: number, numX: number, numY: number, padding: number) => {\r\n  const bricksW = (groupW - padding * (numX - 1)) / numX;\r\n  const bricksH = (groupH - padding * (numY - 1)) / numY;\r\n\r\n  const easing = Bezier(.48,1.52,.34,.87);\r\n\r\n  Brick.createTexture(app, color, bricksW, bricksH);\r\n  Array\r\n    .from({ length: numX * numY })\r\n    .forEach((_, index: number) => {\r\n      const y = Math.floor(index / numX);\r\n      const x = index - y * numX;\r\n      const brick = new Brick(x * (bricksW + padding), y * (bricksH + padding));\r\n      bricks.addChild(brick);\r\n      if(!settings.brick.transition) return;\r\n      setTransition(brick, {\r\n        frames: [\r\n          {\r\n            position: new Vector(brick.position).add(Vector.random2D().mult(100)),\r\n            scale: new Vector(0.4, 0.4),\r\n            alpha: 0,\r\n            rotation: Math.random() * Math.PI * .2 - Math.PI * .1,\r\n          },\r\n          {\r\n            position: new Vector(brick.position),\r\n            scale: new Vector(1, 1),\r\n            alpha: 1,\r\n            rotation: 0,\r\n          },\r\n        ],\r\n        duration: 600 + Math.random() * 200,\r\n        delay: Math.random() * 700,\r\n        easingFunction: easing,\r\n      });\r\n    });\r\n\r\n  bricks.position.copyFrom(new Vector(bricks).add(bricksW * .5, bricksH * .5));\r\n\r\n  return bricks;\r\n}","import { Howl } from \"howler\";\r\nimport { settings } from \"./settings\";\r\n\r\nlet music: Howl;\r\nlet wall: Howl;\r\nlet paddle: Howl;\r\nlet bricks: Howl[];\r\n\r\nlet lastBrickHitTime = 0;\r\nlet lastBrickHitIndex = 0;\r\n\r\n\r\nconst load = () => {\r\n  const dir = `${process.env.PUBLIC_URL}/assets/sound`;\r\n\r\n  bricks = Array.from({ length: 12 }).map((_, index) => {\r\n    return new Howl({\r\n      src: `${dir}/pling${index + 1}.mp3`\r\n    });\r\n  });\r\n\r\n  paddle = new Howl({\r\n    src: `${dir}/ball-paddle.mp3`\r\n  });\r\n\r\n  wall = new Howl({\r\n    src: `${dir}/ball-wall.mp3`\r\n  });\r\n\r\n  music = new Howl({\r\n    src: `${dir}/juicy_breakout-theme.mp3`,\r\n    loop: true,\r\n    volume: .3,\r\n  });\r\n\r\n  if(settings.general.music) music.play();\r\n}\r\n\r\nconst hitBrick = () => {\r\n  if(!settings.brick.sound) return;\r\n  const now = Date.now();\r\n  const diff = now - lastBrickHitTime;\r\n  lastBrickHitIndex++;\r\n  if(diff > 1000) lastBrickHitIndex = 0;\r\n  if(lastBrickHitIndex >= bricks.length) lastBrickHitIndex = bricks.length - 1;\r\n  bricks[lastBrickHitIndex].play();\r\n  lastBrickHitTime = now;\r\n}\r\n\r\nconst hitPaddle = () => {\r\n  if(!settings.paddle.sound) return;\r\n  paddle.play();\r\n}\r\n\r\nconst hitWall = () => {\r\n  if(!settings.wall.sound) return;\r\n  wall.play();\r\n}\r\n\r\nexport const sound = {\r\n  load,\r\n  brick: hitBrick,\r\n  paddle: hitPaddle,\r\n  wall: hitWall,\r\n}","import { Container, IPoint, Application, Graphics } from \"pixi.js\";\r\nimport * as particles from 'pixi-particles';\r\n\r\nlet emitter: particles.Emitter;\r\nlet elapsed = Date.now();\r\n\r\nconst setup = (app: Application, cont: Container) => {\r\n  const gr = new Graphics();\r\n  gr.beginFill(0xffffff)\r\n    .drawCircle(0, 0, 20)\r\n    .endFill();\r\n  const tx = app.renderer.generateTexture(gr, 1, 1);\r\n  \r\n  emitter = new particles.Emitter(\r\n    cont,\r\n    [ tx ],\r\n    {\r\n      \"alpha\": {\r\n        \"start\": 0.3,\r\n        \"end\": 0.43\r\n      },\r\n      \"scale\": {\r\n        \"start\": 0.32,\r\n        \"end\": 0.01,\r\n        \"minimumScaleMultiplier\": 1.02\r\n      },\r\n      \"color\": {\r\n        \"start\": \"#e680ed\",\r\n        \"end\": \"#ff0000\"\r\n      },\r\n      \"speed\": {\r\n        \"start\": 40,\r\n        \"end\": 100,\r\n        \"minimumSpeedMultiplier\": 2\r\n      },\r\n      \"acceleration\": {\r\n        \"x\": 0,\r\n        \"y\": 0\r\n      },\r\n      \"maxSpeed\": 0,\r\n      \"startRotation\": {\r\n        \"min\": 0,\r\n        \"max\": 360\r\n      },\r\n      \"noRotation\": true,\r\n      \"rotationSpeed\": {\r\n        \"min\": 0,\r\n        \"max\": 0\r\n      },\r\n      \"lifetime\": {\r\n        \"min\": 0.39,\r\n        \"max\": 0.9\r\n      },\r\n      \"blendMode\": \"normal\",\r\n      \"frequency\": 0.001,\r\n      \"emitterLifetime\": 0.1,\r\n      \"maxParticles\": 200,\r\n      \"pos\": {\r\n        \"x\": 0,\r\n        \"y\": 0\r\n      },\r\n      \"addAtBack\": false,\r\n      \"spawnType\": \"point\"\r\n    }\r\n  );\r\n}\r\n\r\nconst hit = (point: IPoint) => {\r\n  emitter.updateSpawnPos(point.x, point.y);\r\n  emitter.resetPositionTracking();\r\n  emitter.emit = true;\r\n}\r\n\r\nconst update = () => {\r\n  const now = Date.now();\r\n  const diff = now - elapsed;\r\n\r\n  if(emitter.emit && diff > 500) emitter.emit = false;\r\n\r\n  emitter.update(diff * 0.001);\r\n  elapsed = now;\r\n}\r\n\r\nexport default {\r\n  setup,\r\n  hit,\r\n  update,\r\n}","import { DisplayObject, Rectangle } from \"pixi.js\"\r\nimport { Vector } from \"./utils/Vector\";\r\n\r\nexport interface isTouchingReturnType {\r\n  top: boolean;\r\n  right: boolean;\r\n  bottom: boolean;\r\n  left: boolean;\r\n}\r\n\r\nexport interface withTouchTransform extends DisplayObject {\r\n  touchTransform: {\r\n    scale?: Vector;\r\n    rotation?: number;\r\n  }\r\n}\r\n\r\nexport const isTouching = (objA: DisplayObject|withTouchTransform, objB: DisplayObject|withTouchTransform, type: 0|1 = 0): isTouchingReturnType|false => {\r\n  if(!objA.renderable || !objB.renderable) return false;\r\n  const boxA = getBoundsHelper(objA);\r\n  const boxB = getBoundsHelper(objB);\r\n  const touch = isTouchingBox(boxA, boxB);\r\n  if(touch){\r\n    const { sides } = getTouchingSidesInfo(boxA, boxB, type);\r\n    return { ...sides };\r\n  }\r\n  return false;\r\n}\r\n\r\nexport const getTouchingSidesInfo = (boxA: Rectangle, boxB: Rectangle, type: 0|1 = 0) => {\r\n  const vectorA = Vector.fromBox(boxA);\r\n  const vectorB = Vector.fromBox(boxB);\r\n  const angle = Vector.sub(vectorB, vectorA).heading();\r\n\r\n  const mod = type === 0 ? new Vector(boxB.width * .5, boxB.height * .5) : new Vector();\r\n\r\n  let leftTop = new Vector(boxA.x - mod.x, boxA.y - mod.y);\r\n  let rightTop = new Vector(boxA.x + boxA.width + mod.x, boxA.y - mod.y);\r\n  \r\n  const leftTopAng = Vector.sub(leftTop, vectorA).heading();\r\n  const rightTopAng = Vector.sub(rightTop, vectorA).heading();\r\n  const leftBottomAng = leftTopAng * -1;\r\n  const rightBottomAng = rightTopAng * -1;\r\n\r\n  const sides = { \r\n    top:    angle >= leftTopAng && angle < rightTopAng,\r\n    right:  angle >= rightTopAng && angle < rightBottomAng,\r\n    bottom: angle >= rightBottomAng && angle < leftBottomAng,\r\n    left:   angle >= leftBottomAng || angle < leftTopAng,\r\n  }\r\n\r\n  return { angle, leftTopAng, rightTopAng, leftBottomAng, rightBottomAng, vectorA, vectorB, sides };\r\n}\r\n\r\nconst isTouchingBox = (boxA: Rectangle, boxB: Rectangle) => {\r\n  const left = boxB.x + boxB.width > boxA.x;\r\n  const right = boxB.x < boxA.x + boxA.width;\r\n  const top = boxB.y + boxB.height > boxA.y;\r\n  const bottom = boxB.y < boxA.y + boxA.height;\r\n  return left && right && top && bottom;\r\n}\r\n\r\nconst getBoundsHelper = (obj: DisplayObject|withTouchTransform) => {\r\n  let bounds;\r\n  const { scale, rotation } = 'touchTransform' in obj && obj.touchTransform ? obj.touchTransform : {} as any;\r\n  const doRotation = typeof rotation === 'number';\r\n  const doScale = scale instanceof Vector;\r\n  if(doRotation || doScale){\r\n    const prevScale = new Vector(obj.scale);\r\n    const prevRotation = obj.rotation;\r\n    if(doScale) obj.scale.copyFrom(scale);\r\n    if(doRotation) obj.rotation = rotation;\r\n    obj.updateTransform();\r\n    bounds = obj.getBounds(true);\r\n    if(doScale) obj.rotation = prevRotation;\r\n    if(doRotation) obj.scale.copyFrom(prevScale);\r\n    obj.updateTransform();\r\n  } else {\r\n    bounds = obj.getBounds(true);\r\n  }\r\n  return bounds;\r\n}","import { Rectangle } from \"pixi.js\";\r\nimport { Vector } from \"./Vector\";\r\n\r\nexport interface getBoxVerticesReturnType {\r\n  lt: Vector;\r\n  rt: Vector;\r\n  rb: Vector;\r\n  lb: Vector;\r\n}\r\n\r\nexport const getBoxVertices = (box: Rectangle): getBoxVerticesReturnType => {\r\n  return { \r\n    lt: new Vector(box),\r\n    rt: new Vector(box).add(box.width, 0),\r\n    rb: new Vector(box).add(box.width, box.height),\r\n    lb: new Vector(box).add(0, box.height),\r\n  };\r\n}\r\n","import { Sprite, Graphics, Rectangle } from \"pixi.js\";\r\nimport { isTouchingReturnType } from \"../isTouching\";\r\nimport { Vector } from \"../utils/Vector\";\r\nimport { getBoxVertices } from \"../utils/getBoxVertices\";\r\nimport { getLinesIntersection } from \"../utils/getLinesIntersection\";\r\nimport { setInterpolation } from \"../utils/setInterpolation\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\nexport class Side extends Sprite {\r\n\r\n  gr = new Graphics();\r\n  curve = new Graphics();\r\n  _color: number;\r\n\r\n  constructor(color: number, x: number, y: number, width: number, height: number){\r\n    super();\r\n    this._color = color;\r\n\r\n    this.gr.beginFill(this._color)\r\n      .lineStyle(0)\r\n      .drawRect(x, y, width, height)\r\n      .endFill();\r\n    this.gr.cacheAsBitmap = true;\r\n    \r\n    this.addChild(this.gr);\r\n    this.addChild(this.curve);\r\n  }\r\n\r\n  curveByTouch(touch: isTouchingReturnType, touchPoint: Vector) {\r\n    const vA = new Vector(touchPoint);\r\n    const vB = vA.copy();\r\n    if(touch.top || touch.bottom){\r\n      vA.y = 0;\r\n      vB.y = 99999999;\r\n    } else {\r\n      vA.x = 0;\r\n      vB.x = 99999999;\r\n    }\r\n    const { lt, rt, lb, rb } = getBoxVertices(this.getBounds());\r\n\r\n    let touchLine: Vector[] = [];\r\n    if(touch.top) touchLine = [ lt, rt ];\r\n    if(touch.bottom) touchLine = [ lb, rb ];\r\n    if(touch.left) touchLine = [ lt, lb ];\r\n    if(touch.right) touchLine = [ rt, rb ];\r\n\r\n    const point = getLinesIntersection(vA, vB, touchLine[0], touchLine[1]);\r\n\r\n    if(!point) return;\r\n    \r\n    setInterpolation({\r\n      frames: [ 0, 1, -.4, .6, 0 ],\r\n      easingFunction: Ease.inOut(3),\r\n      duration: 600,\r\n      onChange: (val: number|number[]) => {\r\n        val = val as number * 100;\r\n        const cp = point.copy();\r\n        if(touch.top) cp.y -= val;\r\n        if(touch.bottom) cp.y += val;\r\n        if(touch.left) cp.x -= val;\r\n        if(touch.right) cp.x += val;\r\n        this.curve.clear()\r\n          .lineStyle()\r\n          .beginFill(this._color)\r\n          .moveTo(touchLine[0].x, touchLine[0].y)\r\n          .quadraticCurveTo(cp.x, cp.y, touchLine[1].x, touchLine[1].y)\r\n          .endFill();\r\n      },\r\n    })\r\n  }\r\n\r\n  getBounds(skipUpdate?: boolean, rect?: Rectangle) {\r\n    return this.gr.getBounds(skipUpdate);\r\n  }\r\n}","import { Vector } from \"./Vector\";\r\n\r\n// stolen from https://discourse.processing.org/t/vector-math-for-line-to-line-intersection/5296\r\nconst DIV_TOO_FAR = 0.00001;\r\nexport const getLinesIntersection = (a: Vector, b: Vector, c: Vector, d: Vector): Vector|false => {\r\n  // center everything on point \"d\"\r\n  const axis = c.copy().sub(d);\r\n  const axLen = axis.mag();\r\n  axis.normalize();\r\n  const workingA = a.copy().sub(d);\r\n  const workingB = b.copy().sub(d);\r\n\r\n  // create a perpendicular vector to \"c-d\"\r\n  const rightang = new Vector(-axis.y, axis.x);\r\n\r\n  // In short: rotate everything so \"c-d\" becomes the y-axis\r\n  //   rightang becomes x-axis\r\n  const mappedA = new Vector(workingA.dot(rightang), workingA.dot(axis));\r\n  const mappedB = new Vector(workingB.dot(rightang), workingB.dot(axis));\r\n  // More detail: mappedA and -B are projections of \"a\" and \"b\" onto the lines\r\n  //   \"c-d\" and \"rightang\", creating Axis Aligned 2D coordinates\r\n\r\n  // Get the axis-aligned segment\r\n  const dir = mappedA.sub(mappedB);\r\n\r\n  // This is the same math used for 2D axis-aligned-bounding-boxes but only used\r\n  //   for one intersection instead of two edges\r\n  // In other words:\r\n  //   \"How much do we change segment 'a-b's length to reach segment 'c-d'?\"\r\n  // Result can be +/- INF, meaning segments are parallel\r\n  // Relying on the floating point to handle div by 0.0 --> INF\r\n  //   is implementation dependant. Your hardware may vary.\r\n  let tx = 1.0 / DIV_TOO_FAR;\r\n  if (Math.abs(dir.x) > DIV_TOO_FAR)\r\n    tx = -mappedB.x / dir.x;\r\n  \r\n  // when the original line segment \"a-b\" is extended/shortened by tx,\r\n  //   the end of that segment is the intersecting point\r\n  const inters = new Vector(a.copy().sub(b).mult(tx).add(b));\r\n  \r\n  // Segment/segment intersection:\r\n  // Logic is that if the first segment would have to expand or reverse to\r\n  //   reach the point at 'inters', then the segments do not cross\r\n  const ty = inters.sub(d).dot(axis);\r\n  const intersecting = (tx >= 0) && (tx <= 1.0) && (ty >= 0) && (ty <= axLen);\r\n  \r\n  inters.add(d);\r\n  return intersecting ? inters : false;\r\n}","import { Container, Application } from \"pixi.js\";\r\nimport { Side } from \"../objects/Side\";\r\n\r\nexport const setupSides = (app: Application, sides: Container, size: number, color: number) => {\r\n  const { width, height } = app.view;\r\n  const top = new Side(color, -size, -size, width + size, size);\r\n  const right = new Side(color, width, -size, size, height + size);\r\n  const bottom = new Side(color, -size, height, width + size, size);\r\n  const left = new Side(color, -size, -size, size, height + size);\r\n  sides.addChild(top);\r\n  sides.addChild(right);\r\n  sides.addChild(bottom);\r\n  sides.addChild(left);\r\n}","import { Vector } from \"./Vector\";\r\nimport { setInterpolation, InterpolationOptions } from \"./setInterpolation\";\r\nimport { Graphics } from \"pixi.js\";\r\n\r\ninterface Options extends Omit<InterpolationOptions, 'frames'|'onChange'|'duration'|'easingFunction'> {\r\n  vectors: Vector[];\r\n  enter?: {\r\n    duration: number;\r\n    easingFunction?: InterpolationOptions['easingFunction'];\r\n  };\r\n  exit?: {\r\n    duration: number;\r\n    delay?: number;\r\n    easingFunction?: InterpolationOptions['easingFunction'];\r\n  };\r\n  line: {\r\n    color: number,\r\n    width: number,\r\n  }\r\n}\r\n\r\nexport const interpolateLine = (gr: Graphics, { vectors, line, enter = { duration: 0 }, exit = { duration: 0 }, ...options }: Options) => {\r\n  // defaults\r\n  if(enter.duration < 0) enter.duration = 0;\r\n  if(exit.duration < 0) exit.duration = 0;\r\n  if(typeof exit.delay !== 'number' || exit.delay < enter.duration) exit.delay = 0;\r\n  if(!enter.easingFunction) enter.easingFunction = t => t;\r\n  if(!exit.easingFunction) exit.easingFunction = t => t;\r\n\r\n  // total line length\r\n  const totalLength = vectors.slice(1).reduce((acc, curr, index) => {\r\n    return acc + Vector.sub(curr, vectors[index]).mag();\r\n  }, 0);\r\n\r\n  const totalDuration = enter.duration + exit.delay + exit.duration;\r\n  if(totalDuration <= 0) return gr;\r\n\r\n  const map = (val: number, min: number, max: number) => {\r\n    let res = (val - min) / (max - min);\r\n    if(res < 0) res = 0;\r\n    if(res > 1) res = 1;\r\n    return res;\r\n  }\r\n  \r\n  const draw = (t: number|number[]) => {\r\n    const current = t as number * totalDuration\r\n    const enterT = map(current, 0, enter.duration);\r\n    const exitT = map(current, enter.duration + exit.delay!, totalDuration);\r\n\r\n    const enterVal = enter.easingFunction!(enterT) * totalLength;\r\n    const exitVal = exit.easingFunction!(exitT) * totalLength;\r\n\r\n    const enterTip = getCurrentFromStep(enterVal, vectors);\r\n    const exitTip = getCurrentFromStep(exitVal, vectors);\r\n\r\n    // list of vectors to draw\r\n    const lineVectors = [\r\n      exitTip.pos,\r\n      ...vectors.slice(exitTip.index, enterTip.index),\r\n      enterTip.pos\r\n    ];\r\n    gr.clear();\r\n    gr.lineStyle(line.width, line.color);\r\n    lineVectors.forEach((pt, i) => {\r\n      gr[i === 0 ? 'moveTo' : 'lineTo'](pt.x, pt.y);\r\n    });\r\n  }\r\n\r\n  setInterpolation({\r\n    frames: [{value: 0}, {value: 1}],\r\n    duration: totalDuration,\r\n    onChange: draw,\r\n    ...options\r\n  });\r\n\r\n  return gr;\r\n}\r\n\r\nconst getCurrentFromStep = (step: number, vectors: Vector[]) => {\r\n  // max length of current segment\r\n  let maxLength = 0;\r\n  // length until previous segment\r\n  let prevLength = 0;\r\n  // last completed index\r\n  const index = 1 + vectors.slice(1).findIndex((curr, index) => {\r\n    maxLength += Vector.sub(curr, vectors[index]).mag();\r\n    if(maxLength >= step) return true;\r\n    prevLength = maxLength;\r\n    return false;\r\n  });\r\n  // current segment step\r\n  const innerVal = (step - prevLength) / (maxLength - prevLength);\r\n  // prev vector\r\n  const prev = vectors[index - 1];\r\n  // next vector\r\n  const next = vectors[index];\r\n  // interpolation between prev and next in step\r\n  const pos = prev.copy().lerp(next, innerVal);\r\n  // return current index and pos\r\n  return { index, pos };\r\n}","import { DisplayObject, Graphics, Application } from \"pixi.js\";\r\nimport { getBoxVertices, getBoxVerticesReturnType } from \"./getBoxVertices\";\r\nimport { Vector } from \"./Vector\";\r\nimport { interpolateLine } from \"./interpolateLine\";\r\nimport { Ease } from \"./Ease\";\r\nimport { isTouchingReturnType } from \"../isTouching\";\r\nimport { setTransition } from \"./setTransition\";\r\nimport { settings } from \"./settings\";\r\n\r\nexport const breakBrick = (app: Application, touch: isTouchingReturnType, objA: DisplayObject, objB: DisplayObject) => {\r\n  const bounds = objA.getBounds();\r\n  const vertices = getBoxVertices(bounds);\r\n  \r\n  const [ pointA, pointB ] = getPointsByTouch(touch, vertices);\r\n  const newPoints = [\r\n    new Vector(pointA).lerp(pointB, .33),\r\n    new Vector(pointA).lerp(pointB, .66),\r\n  ];\r\n\r\n  newPoints.forEach((point) => {\r\n    point.add(Vector.random2D().mult(bounds.height * .3));\r\n  });\r\n  const fracture = [ pointA, ...newPoints, pointB ];\r\n  \r\n  const sideA = fracture.slice();\r\n  const sideB = fracture.slice();\r\n\r\n  const fromLR = touch.left || touch.right;\r\n  const fromTB = touch.top || touch.bottom;\r\n\r\n  if(touch.bottom || touch.right) {\r\n    sideA.reverse();\r\n    sideB.reverse();\r\n  }\r\n\r\n  if(fromTB){\r\n    sideA.push(vertices.rb, vertices.rt);\r\n    sideB.push(vertices.lb, vertices.lt);\r\n  }\r\n\r\n  if(fromLR){\r\n    sideA.push(vertices.rt, vertices.lt);\r\n    sideB.push(vertices.rb, vertices.lb);\r\n  }\r\n\r\n  const movBg = 100;\r\n  const movSm = 40;\r\n\r\n  // sideA (top or right)\r\n  const grA = new Graphics();\r\n  const globalA = new Vector(objA.getGlobalPosition());\r\n  grA.beginFill(0xcc11cc);\r\n  sideA.forEach((pt, i) => {\r\n    pt = new Vector(pt).sub(globalA);\r\n    grA[i === 0 ? 'moveTo' : 'lineTo'](pt.x, pt.y);\r\n  });\r\n  grA.closePath();\r\n  grA.endFill();\r\n  const rA = Math.random() - .5;\r\n  grA.position.copyFrom(globalA);\r\n  setTransition(grA, {\r\n    frames: [\r\n      {\r\n        position: new Vector(grA),\r\n        rotation: 0,\r\n      },\r\n      {\r\n        position: new Vector(grA).add(fromLR ? new Vector(rA * movSm, movBg * -1) : new Vector(movBg, rA * movSm)),\r\n        rotation: rA,\r\n      }\r\n    ],\r\n    duration: 300,\r\n    delay: 200,\r\n    easingFunction: Ease.inOut(2),\r\n    onFinish: () => {\r\n      app.stage.removeChild(grA);\r\n      grA.destroy();\r\n    }\r\n  });\r\n\r\n  // sideB (bottom or left)\r\n  const grB = new Graphics();\r\n  const globalB = new Vector(objA.getGlobalPosition());\r\n  grB.beginFill(0xcc11cc);\r\n  sideB.forEach((pt, i) => {\r\n    pt = new Vector(pt).sub(globalB);\r\n    grB[i === 0 ? 'moveTo' : 'lineTo'](pt.x, pt.y);\r\n  });\r\n  grB.closePath();\r\n  grB.endFill();\r\n  const rB = Math.random() - .5;\r\n  grB.position.copyFrom(globalA);\r\n  setTransition(grB, {\r\n    frames: [\r\n      {\r\n        position: new Vector(grB),\r\n        rotation: 0,\r\n      },\r\n      {\r\n        position: new Vector(grB).add(fromLR ? new Vector(rB * movSm, movBg * 1) : new Vector(movBg * -1, rB * movSm)),\r\n        rotation: rB,\r\n      }\r\n    ],\r\n    duration: 300,\r\n    delay: 200,\r\n    easingFunction: Ease.inOut(2),\r\n    onFinish: () => {\r\n      app.stage.removeChild(grB);\r\n      grB.destroy();\r\n    }\r\n  });\r\n\r\n  // lightning\r\n  const extra = Vector.sub(pointB, pointA).mult(.7).add(pointB);\r\n  const lightning = [ ...fracture, extra ];\r\n  const gr = new Graphics();\r\n  interpolateLine(gr, {\r\n    vectors: lightning,\r\n    enter: {\r\n      duration: 200,\r\n      easingFunction: Ease.inOut(2),\r\n    },\r\n    exit: {\r\n      duration: 200,\r\n      delay: -50,\r\n      easingFunction: Ease.inOut(2),\r\n    },\r\n    onFinish: () => {\r\n      app.stage.removeChild(gr);\r\n      gr.destroy();\r\n    },\r\n    line: {\r\n      width: 2,\r\n      color: 0xffff00,\r\n    }\r\n  });\r\n\r\n  if(settings.brick.break){\r\n    app.stage.addChild(grB);\r\n    app.stage.addChild(grA);\r\n  }\r\n  if(settings.brick.lightning) app.stage.addChild(gr);\r\n}\r\n\r\nconst getPointsByTouch = (touch: isTouchingReturnType, vert: getBoxVerticesReturnType) => {\r\n  const rA = Math.random() * .4 + .3;\r\n  const rB = Math.random() * .4 + .3;\r\n\r\n  const lt = vert.lt.copy();\r\n  const rt = vert.rt.copy();\r\n  const lb = vert.lb.copy();\r\n  const rb = vert.rb.copy();\r\n\r\n  if(touch.top) return [ lt.lerp(rt, rA), lb.lerp(rb, rB) ];\r\n  if(touch.bottom) return [ lb.lerp(rb, rA), lt.lerp(rt, rB) ];\r\n  if(touch.right) return [ rt.lerp(rb, rA), lt.lerp(lb, rB) ];\r\n  return [ lt.lerp(lb, rA), rt.lerp(rb, rB) ];\r\n}","import { Ticker, Application, Container, interaction, Graphics } from 'pixi.js';\r\nimport { Paddle } from './objects/Paddle';\r\nimport { Ball } from './objects/Ball';\r\nimport { setupBricks } from './utils/setupBricks';\r\nimport { isTouching } from './isTouching';\r\nimport { setupSides } from './utils/setupSides';\r\nimport { setTransition } from './utils/setTransition';\r\nimport { Vector } from './utils/Vector';\r\nimport { Ease } from './utils/Ease';\r\nimport { settings } from './utils/settings';\r\nimport { setupAngleTest } from './tests/setupAngleTest';\r\nimport { setupTransitionTest } from './tests/setupTransitionTest';\r\nimport { pI } from './utils/pI';\r\nimport { sound } from './utils/sound';\r\nimport { Brick } from './objects/Brick';\r\nimport particles from './utils/particles';\r\nimport { setupBreakBrickTest } from './tests/setupBreakBrickTest';\r\nimport { setupInterpolationTest } from './tests/setupInterpolationTest';\r\nimport { breakBrick } from './utils/breakBrick';\r\nimport { setupLightningsTest } from './tests/setupLightningsTest';\r\nimport { setupCurveTest } from './tests/setupCurveTest';\r\nimport { Side } from './objects/Side';\r\n\r\nexport const initGame = () => {\r\n\r\n  sound.load();\r\n  \r\n  const app = new Application({ \r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n\r\n  const ticker = new Ticker();\r\n\r\n  const group = new Container();\r\n  var paddle: Paddle;\r\n  var bricks = new Container();\r\n  var ball: Ball;\r\n  var sides = new Container();\r\n\r\n  // for debugging\r\n  var extra = new Container();\r\n\r\n  let canMovePaddle = !settings.paddle.transition;\r\n\r\n  const setup = () => {\r\n    const { width, height } = app.view;\r\n\r\n    particles.setup(app, group);\r\n    \r\n    // background\r\n    const bg = new Graphics()\r\n      .beginFill(0x000000)\r\n      .drawRect(0, 0, width, height)\r\n      .endFill();\r\n    app.stage.addChild(bg);\r\n\r\n    //sides\r\n    setupSides(app, sides, 100, 0x11cccc);\r\n    app.stage.addChild(sides);\r\n\r\n    // setup bricks\r\n    bricks = setupBricks(app, bricks, 0xcc11cc, width * .8, height * .35, 8, 6, 20);\r\n    bricks.position.copyFrom(new Vector(bricks).add(width * .1, width * .1));\r\n    group.addChild(bricks);\r\n\r\n    // setup ball\r\n    Ball.createTexture(app, 0xccf111, 0xffffff, 20);\r\n    ball = new Ball();\r\n    \r\n    // setup paddle\r\n    Paddle.createTexture(app, 0xcc1111, width * .15, 40);\r\n    paddle = new Paddle();\r\n    paddle.position.set(width * .5, height - 60);\r\n    paddle.addBall(ball);\r\n    group.addChild(paddle);\r\n    if(settings.paddle.transition){\r\n      setTransition(paddle, {\r\n        frames: [\r\n          {\r\n            position: new Vector(paddle.position).add(0, 300),\r\n            scale: new Vector(.3, .3),\r\n          },\r\n          {\r\n            position: new Vector(paddle.position),\r\n            scale: new Vector(1, 1),\r\n          },\r\n        ],\r\n        duration: 500,\r\n        delay: 400,\r\n        easingFunction: Ease.out(3),\r\n        onFinish: () => {\r\n          canMovePaddle = true;\r\n          if(settings.test.autoStart) {\r\n            handleMouseClick(null as any);\r\n            paddle.position.y = -100;\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // add group to stage\r\n    app.stage.addChild(group);\r\n\r\n    // add extra to stage\r\n    app.stage.addChild(extra);\r\n\r\n    app.stage.interactive = true;\r\n    app.stage.on('mousemove', handleMouseMove);\r\n    app.stage.on('mousedown', handleMouseClick);\r\n    app.renderer.plugins.interaction.cursorStyles.default = 'none';\r\n\r\n    ticker.add(process);\r\n    ticker.start();\r\n  }\r\n\r\n  const process = () => {\r\n    paddle.process();\r\n    if(!ball.inStage) return;\r\n    particles.update();\r\n\r\n    const touch = isTouching(paddle, ball, 1);\r\n    const bounce = touch && ball.bounce(touch, paddle);\r\n\r\n    if(bounce) {\r\n      wobbleBricks();\r\n      sound.paddle();\r\n    }\r\n\r\n    ball.process(paddle, touch, bounce);\r\n    ball.move();\r\n\r\n    bricks.children.some(brick => {\r\n      if(brick instanceof Brick) brick.process();\r\n      const touch = isTouching(brick, ball);\r\n      if(touch){\r\n        breakBrick(app, touch, brick, ball);\r\n        ball.bounce(touch);\r\n        bricks.removeChild(brick);\r\n        wobbleBricks(true);\r\n        sound.brick();\r\n      }\r\n      return touch;\r\n    });\r\n\r\n    sides.children.forEach(side => {\r\n      const touch = isTouching(side, ball, 1);\r\n      if(touch) {\r\n        ball.bounce(touch, side);\r\n        wobbleBricks();\r\n        sound.wall();\r\n        if(settings.wall.curve && side instanceof Side) side.curveByTouch(touch, new Vector(ball));\r\n      }\r\n    });\r\n  }\r\n\r\n  const wobbleBricks = (touchedBrick?: boolean) => {\r\n    if(!ball.inStage) return;\r\n    particles.hit(ball.position)\r\n\r\n    const minDist = Brick.tx.width;\r\n    const maxDist = app.view.width/2;\r\n    const point = new Vector(ball);\r\n    bricks.children.forEach(brick => {\r\n      const dist = !touchedBrick ? 0 : new Vector(brick.getGlobalPosition()).dist(point);\r\n      const delay = !touchedBrick ? Math.random() * 70 : pI.map(dist, minDist, maxDist, 0, 200, true);\r\n      const color = !touchedBrick ? Math.random() : dist/maxDist;\r\n\r\n      if(settings.brick.color && brick instanceof Brick) brick.changeTexture(color);\r\n\r\n      if(settings.brick.wobble) setTransition(brick, {\r\n        frames: [\r\n          {\r\n            scale: new Vector(1, 1),\r\n            rotation: 0\r\n          },\r\n          {\r\n            scale: new Vector(1.1, 1.1),\r\n            rotation: Math.random() * .2 - .1\r\n          },\r\n          {\r\n            scale: new Vector(0.9, 0.9),\r\n            rotation: Math.random() * .2 - .1\r\n          },\r\n          {\r\n            scale: new Vector(1, 1),\r\n            rotation: 0\r\n          }\r\n        ],\r\n        duration: 200,\r\n        delay,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleMouseMove = (event: interaction.InteractionEvent) => {\r\n    if(canMovePaddle) paddle.move(event.data.global.x);\r\n  }\r\n\r\n  const handleMouseClick = (event: interaction.InteractionEvent) => {\r\n    if(ball.inStage) return;\r\n    ball.getGlobalPosition().copyTo(ball.position);\r\n    app.stage.addChild(ball);\r\n    ball.release();\r\n  }\r\n\r\n  if(settings.test.angles){\r\n    setupAngleTest(app);\r\n  } else if(settings.test.transition){\r\n    setupTransitionTest(app);\r\n  } else if(settings.test.brickBreak){\r\n    setupBreakBrickTest(app);\r\n  } else if(settings.test.interpolation){\r\n    setupInterpolationTest();\r\n  } else if(settings.test.lightnings){\r\n    setupLightningsTest(app);\r\n  } else if(settings.test.curve){\r\n    setupCurveTest(app);\r\n  } else {\r\n    setup();\r\n  }\r\n\r\n  return app;\r\n}","import { Brick } from \"../objects/Brick\";\r\nimport { Application, Graphics, TextStyle, Text, interaction } from \"pixi.js\";\r\nimport { Ball } from \"../objects/Ball\";\r\nimport { Vector } from \"../utils/Vector\";\r\nimport { pI } from \"../utils/pI\";\r\nimport { getTouchingSidesInfo } from \"../isTouching\";\r\n\r\nexport const setupAngleTest = (app: Application) => {\r\n  const { width, height } = app.view;\r\n  \r\n  Brick.createTexture(app, 0xcc11cc, 200, 20);\r\n  const objA = new Brick(width * .5, height * .5);\r\n  app.stage.addChild(objA);\r\n\r\n  Ball.createTexture(app, 0xccf111, 0xccf111, 20);\r\n  const objB = new Ball();\r\n  app.stage.addChild(objB);\r\n\r\n  app.stage.interactive = true;\r\n  const gr = new Graphics();\r\n  const style = new TextStyle({\r\n    fontSize: 14,\r\n    fill: '#ffffff',\r\n  });\r\n  app.stage.addChild(gr);\r\n  \r\n  app.stage.on('mousemove', (ev: interaction.InteractionEvent) => {\r\n    objB.position.copyFrom(ev.data.global);\r\n\r\n    const boxA = objA.getBounds();\r\n    const boxB = objB.getBounds();\r\n\r\n    const { angle, leftTopAng, rightTopAng, leftBottomAng, rightBottomAng, vectorA, sides } = getTouchingSidesInfo(boxA, boxB, 1);\r\n\r\n    const size = 200;\r\n    const leftTop = Vector.fromAngle(leftTopAng).mult(size).add(vectorA);\r\n    const rightTop = Vector.fromAngle(rightTopAng).mult(size).add(vectorA);\r\n    const leftBottom = Vector.fromAngle(leftBottomAng).mult(size).add(vectorA);\r\n    const rightBottom = Vector.fromAngle(rightBottomAng).mult(size).add(vectorA);\r\n\r\n    // @ts-ignore\r\n    let side = Object.keys(sides).find(k => sides[k]);\r\n\r\n    gr.removeChildren();\r\n    gr.clear()\r\n      .lineStyle(2, 0xffffff)\r\n      .moveTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y)\r\n      .lineTo(objB.x, objB.y)\r\n      .moveTo(leftTop.x, leftTop.y)\r\n      .lineTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y)\r\n      .moveTo(rightTop.x, rightTop.y)\r\n      .lineTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y)\r\n      .moveTo(leftBottom.x, leftBottom.y)\r\n      .lineTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y)\r\n      .moveTo(rightBottom.x, rightBottom.y)\r\n      .lineTo(objA.getGlobalPosition().x, objA.getGlobalPosition().y);\r\n\r\n    const tx = new Text(Math.round(pI.degrees(angle)) + ' ' + side, style);\r\n    tx.position.x = objB.position.x + 15;\r\n    tx.position.y = objB.position.y + 15;\r\n    gr.addChild(tx);\r\n\r\n\r\n  });\r\n}","import { Application } from \"pixi.js\";\r\nimport { Ball } from \"../objects/Ball\";\r\nimport { setTransition } from \"../utils/setTransition\";\r\nimport { Vector } from \"../utils/Vector\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\nexport const setupTransitionTest = (app: Application) => {\r\n  const { width, height } = app.view;\r\n\r\n  Ball.createTexture(app, 0xccf111, 0xccf111, 20);\r\n  const ball = new Ball();\r\n  ball.position.set(width * .5, height * .5);\r\n  app.stage.addChild(ball);\r\n\r\n  const duration = 800;\r\n  const initialScale = new Vector(1, 1.5);\r\n  const transition = () => {\r\n    console.clear();\r\n    setTransition(ball, {\r\n      frames: [\r\n        {\r\n          scale: initialScale,\r\n        },\r\n        {\r\n          scale: new Vector(1.4, .7),\r\n        },\r\n        {\r\n          scale: new Vector(1, 1.3),\r\n        },\r\n        {\r\n          scale: new Vector(1.2, .8),\r\n        },\r\n        {\r\n          scale: new Vector(1, 1),\r\n        },\r\n      ],\r\n      duration: duration,\r\n      autoStart: true,\r\n      easingFunction: Ease.inOut(1.5),\r\n    });\r\n  };\r\n  transition();\r\n  setInterval(transition, duration + 500);\r\n}","import { Brick } from \"../objects/Brick\";\r\nimport { Application, interaction } from \"pixi.js\";\r\nimport { Ball } from \"../objects/Ball\";\r\nimport { isTouching } from \"../isTouching\";\r\nimport { breakBrick } from \"../utils/breakBrick\";\r\n\r\nexport const setupBreakBrickTest = (app: Application) => {\r\n  const { width, height } = app.view;\r\n  \r\n  Brick.createTexture(app, 0xcc11cc, 200, 50);\r\n  const objA = new Brick(width * .5, height * .5);\r\n  app.stage.addChild(objA);\r\n\r\n  Ball.createTexture(app, 0xccf111, 0xccf111, 0);\r\n  const objB = new Ball();\r\n  app.stage.addChild(objB);\r\n\r\n  app.stage.interactive = true;\r\n\r\n  const info = document.createElement('pre');\r\n  info.style.position = 'fixed';\r\n  info.style.top = '0px';\r\n  info.style.left = '0px';\r\n  info.style.color = 'white';\r\n  info.style.margin = '0px';\r\n  info.style.padding = '20px';\r\n  document.body.appendChild(info);\r\n\r\n  const process = (ev: interaction.InteractionEvent) => {\r\n    objB.position.copyFrom(ev.data.global);\r\n\r\n    const touch = isTouching(objA, objB);\r\n    const side = touch && Object.keys(touch).find((k) => (touch as any)[k]);\r\n    info.innerText = side || '';\r\n\r\n    if(!touch) return;\r\n    \r\n    //setInterval(() => breakBrick(app, touch, objA, objB), 100)\r\n    breakBrick(app, touch, objA, objB);\r\n  }\r\n\r\n  app.stage.on('click', process);\r\n}","import { Ease } from \"../utils/Ease\";\r\nimport { setInterpolation } from \"../utils/setInterpolation\";\r\n\r\nexport const setupInterpolationTest = () => {\r\n  const div = document.createElement('div');\r\n  div.style.position = 'fixed';\r\n  div.style.width = '30px';\r\n  div.style.height = '30px';\r\n  div.style.backgroundColor = 'red';\r\n  div.style.top = '100px';\r\n  document.body.appendChild(div);\r\n  setInterpolation({\r\n    frames: [\r\n      { value: 0 },\r\n      { value: 200 },\r\n      { value: 50 },\r\n      { value: window.innerWidth }\r\n    ],\r\n    duration: 3000,\r\n    easingFunction: Ease.inOut(2),\r\n    onChange: (n) => (div.style.left = n + 'px')\r\n  });\r\n}","import { Application, Graphics } from \"pixi.js\";\r\nimport { Vector } from \"../utils/Vector\";\r\nimport { interpolateLine } from \"../utils/interpolateLine\";\r\nimport { Ease } from \"../utils/Ease\";\r\nimport { setInterval } from \"timers\";\r\nimport chroma from 'chroma-js';\r\n\r\nexport const setupLightningsTest = (app: Application) => {\r\n  const { width, height } = app.view;\r\n\r\n  const maxDisplacement = 30;\r\n  const minDisplacement = 10;\r\n  const pointA = new Vector(width * .3, height * .5);\r\n  const pointB = new Vector(width * .6, height * .5);\r\n\r\n  const colors = [\r\n    ...chroma.scale(['#ffeb3b', '#ff5722']).colors(3),\r\n    ...chroma.scale(['#1e88e5', '#e3f2fd']).colors(10),\r\n  ].map(c => chroma(c).num());\r\n  \r\n  const makeLightning = () => {\r\n    const gr = new Graphics();\r\n    app.stage.addChild(gr);\r\n\r\n    const line = {\r\n      color: colors[Math.floor(Math.random() * colors.length)],\r\n      width: Math.random() * 3 + 1,\r\n    }\r\n\r\n    const points = [\r\n      pointA,\r\n      ...Array.from({ length: 5 })\r\n        .map((_, i, arr) => {\r\n          const len = 1 / (arr.length + 1) * (i + 1);\r\n          const disp = Math.random() * (maxDisplacement + minDisplacement) - minDisplacement;\r\n          return new Vector(pointA).lerp(pointB, len)\r\n            .add(Vector.random2D().mult(disp));\r\n        }),\r\n      pointB,\r\n    ];\r\n  \r\n    interpolateLine(gr, {\r\n      vectors: points,\r\n      enter: {\r\n        duration: 200,\r\n        easingFunction: Ease.inOut(2),\r\n      },\r\n      exit: {\r\n        duration: 200,\r\n        delay: -50,\r\n        easingFunction: Ease.inOut(2),\r\n      },\r\n      onFinish: () => {\r\n        app.stage.removeChild(gr);\r\n        gr.destroy();\r\n      },\r\n      line\r\n    });\r\n  }\r\n\r\n  setInterval(makeLightning, 100);\r\n}","import { Application, Container, Ticker } from \"pixi.js\";\r\nimport { Ball } from \"../objects/Ball\";\r\nimport { setupSides } from \"../utils/setupSides\";\r\nimport { Vector } from \"../utils/Vector\";\r\nimport { isTouching } from \"../isTouching\";\r\nimport { Side } from \"../objects/Side\";\r\n\r\nexport const setupCurveTest = (app: Application) => {\r\n  const { width, height } = app.view;\r\n\r\n  const sides = new Container();\r\n  app.stage.addChild(sides);\r\n  setupSides(app, sides, 100, 0x11cccc);\r\n\r\n  sides.addChild(new Side(0x11cccc, width * .3, height * .3, width * .4, height * .4));\r\n\r\n  Ball.createTexture(app, 0xffff00, 0xffffff, 20);\r\n  const ball = new Ball();\r\n  ball.position.set(width * .5, height * .8);\r\n  ball.vel = new Vector(10, 10);\r\n  ball.inStage = true;\r\n  app.stage.addChild(ball);\r\n\r\n  const process = () => {\r\n    ball.move();\r\n\r\n    sides.children.forEach(side => {\r\n      const touch = isTouching(side, ball, 1);\r\n      if(touch) {\r\n        ball.bounce(touch, side);\r\n        if(side instanceof Side) side.curveByTouch(touch, new Vector(ball));\r\n      }\r\n    });\r\n  }\r\n\r\n  const ticker = new Ticker();\r\n  ticker.add(process);\r\n  ticker.start();\r\n}","import * as React from 'react';\r\nimport { initGame } from './main';\r\nimport { Application } from 'pixi.js';\r\n\r\ninterface GameProps {}\r\n\r\nconst Game: React.FC<GameProps> = () => {\r\n\r\n  const divRef = React.useRef(null as null|HTMLDivElement);\r\n  const gameRef = React.useRef(null as null|Application);\r\n\r\n  React.useEffect(() => {\r\n    gameRef.current = initGame();\r\n    divRef.current!.append(gameRef.current.view);\r\n  }, []);\r\n  \r\n  return (<div ref={divRef}></div>);\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport Game from '../../game/Game';\n\nconst App = () => {\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}